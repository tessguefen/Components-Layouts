<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "TGCOMPONENTS">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Components & Layouts">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Tess Guefen">
	<MvASSIGN NAME = "l.module:version"		VALUE = "1.020">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "9.12">
	<MvASSIGN NAME = "l.module:description"	VALUE = "Create components to easily manipulate customized layouts.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "data_store, util, component, json, clientside, provision_store, export, scheduledtask">
</MvFUNCTION>

<MvCOMMENT>
	Change Log
	1.001
		UI Updates
		- Styled Top Level Components
		- Added Collapse Toggle
	1.002
		Bug Fixes
		- Import Issue with components with no attributes.
	1.003
		UI Updates
		- Added "datetime" attribute for a Date/Time picker. Returns timestamp.
	1.004
		Added Layout Caching! :sunglasses:
	1.005
		- Fixed UI issue with Radio buttons.
	1.006
		- Added Date Cached
		- Added Date Start/ End per Layout> Components
	1.007
		- Actually Added Scheduling
		- Added Scheduled Task
	1.008
		- Updated PRV tags
		- Updated api_ver
	1.009
		- Added Check for Layout Cache for Start/End Dates per Layout on Runtime Call
		- Display Order for Components (o.m.g.)
	1.010
		- Array Field Type
	1.011
		- Added Export Option for All Layouts, or a specific layout
		- Made 'multitext' textarea larger.
	1.012
		- Max wins, column code added
	1.013
		- Minor bug fix (display order of Component Attributes)
		- Updated `Code` display on Layout Edit
		- Fixed left over data in previous modal issue (since )
	1.014
		- Major clean up / formatting
		- Added int() on certain values when inserting via lowlevel functions
	1.015
		- Security Bug Fixes Release
		- Minor XML Import Bug fix
	1.016
		- Removed decodeattribute( g.Payload )
	1.017
		- BUGFIX: 'Component_Update' > removed disp_order update.
	1.018
		- BUGFIX: MM10
	1.019
		- BUGFIX: Removed `opt.code` (random). And changed "View Layout" button placement to be first.
</MvCOMMENT>

<MvCOMMENT>
|
|	INSTALL
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Create TGComponents table.
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGComponents
							(
								id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								code			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								name			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								descrip			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								image			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								allow_children	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
								disp_order		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$'
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1000', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGComponents_1 ON ' $ g.Store_Table_Prefix $ 'TGComponents ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGComponents_2 ON ' $ g.Store_Table_Prefix $ 'TGComponents ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGComponent_Attrs table.
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs
							(
								id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								component_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								code			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								prompt			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								type			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								required		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
								disp_order		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$'
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs_1 ON ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs_2 ON ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs ( component_id, code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGComponent_Options table.
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGComponent_Options
							(
								id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								attr_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								prompt		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$'
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGComponent_Options_1 ON ' $ g.Store_Table_Prefix $ 'TGComponent_Options ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGComponent_Options_2 ON ' $ g.Store_Table_Prefix $ 'TGComponent_Options ( attr_id, prompt )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGLayouts table.
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts
							(
								id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								name	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1009', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_2 ON ' $ g.Store_Table_Prefix $ 'TGLayouts ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGLayouts_Components table.
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components
							(
								id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								layout_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								component_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								name			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								parent			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								active			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
								disp_order		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								dt_start		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 255 )	$ ',
				 				dt_end			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 255 )	$ ',
				 				code			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Components_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Components ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1013', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Components_2 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Components ( parent, disp_order )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1014', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Components_3 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Components ( layout_id, code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1019', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGLayouts_Values table.
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Values
							(
								layouts_components_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								attr_id					' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								value					' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1015', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Values_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Values ( layouts_components_id, attr_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1016', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGLayouts_Cache table
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache
							(
								layout_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ ',
								dt_cached	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 255 )	$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1017', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache ( layout_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1018', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Store Keys
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponents', 1 )					OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponents_Disp_Order', 1 )			OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponent_Attrs', 1 )				OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponent_Attrs_Disp_Order', 1 )	OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponent_Options', 1 )				OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponent_Options_Disp_Order', 1 )	OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGLayouts', 1 )						OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGLayouts_Components', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].DomainPrivilege_Load_Privilege( 'TGCOMPONENTS', l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].DomainPrivilege_Insert( 'TGCOMPONENTS', 'Components & Layouts Module' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'tgcomponent', l.module:code ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.version LT 1.004 }">
		<MvCOMMENT>
		|
		|	Create TGLayouts_Cache table
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache
								(
									layout_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ '
								)' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-UPGRADE-1001', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache ( layout_id )' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-UPGRADE-1002', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.version LT 1.006 }">
		<MvCOMMENT>
		|
		|	Add Timestamp for when it was last cached.
		|
		</MvCOMMENT>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache
				 				ADD
				 				(
				 					dt_cached	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 255 ) $ '
				 				)'}">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-UPGRADE-1003', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components
				 				ADD
				 				(
				 					dt_start	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 255 ) $ ',
				 					dt_end		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 255 ) $ '
				 				)'}">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-UPGRADE-1004', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT Layout_Cache_DeleteAll() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-UPGRADE-1005', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.version LT 1.009 }">
		<MvCOMMENT>
		|
		|	Add display_order for TGComponents
		|
		</MvCOMMENT>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGComponents
				 				ADD
				 				(
				 					disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 ) $ '
				 				)'}">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-UPGRADE-1006', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponents_Disp_Order', 1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-UPGRADE-1007', g.MvQUERY_Error ) }">
		</MvIF>

		<MvCOMMENT>
		|
		|	Update default Display Order
		|
		</MvCOMMENT>

		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "TGComponents"
					QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponents' }">

		<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-UPGRADE-1008', g.MvQUERY_Error ) }">
		</MvIF>

		<MvASSIGN NAME = "l.count" VALUE = 0>

		<MvWHILE EXPR = "{ NOT TGComponents.d.EOF }">
			<MvEVAL EXPR = "{ Component_Read( l.components[ ++l.count ] ) }">
			<MvASSIGN NAME = "l.components" INDEX = "{ l.count }" MEMBER = "disp_order" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents_Disp_Order' ) }">

			<MvSKIP NAME = "Merchant" VIEW = "TGComponents" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

		<MvFOREACH ITERATOR = "l.component" ARRAY = "l.components">
			<MvIF EXPR = "{ NOT Component_Update( l.component ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-UPGRADE-1009', g.TGCOMPONENTS_Error:message ) }">
			</MvIF>
		</MvFOREACH>
	</MvIF>

	<MvIF EXPR = "{ l.version LT 1.012 }">
		<MvCOMMENT>
		|
		|	Add column `code`
		|
		</MvCOMMENT>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components
				 				ADD
				 				(
				 					code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 ) $ '
				 				)'}">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-UPGRADE-1010', g.MvQUERY_Error ) }">
		</MvIF>

		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "TGLayouts_Components"
					QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components' }">
		<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-UPGRADE-1012', g.MvQUERY_Error ) }">
		</MvIF>

		<MvASSIGN NAME = "l.count"		VALUE = 0>
		<MvASSIGN NAME = "l.components"	VALUE = "">

		<MvWHILE EXPR = "{ NOT TGLayouts_Components.d.EOF }">
			<MvEVAL EXPR = "{ LayoutComponent_Read( l.components[ ++l.count ] ) }">
			<MvASSIGN NAME = "l.components" INDEX = "{ l.count }" MEMBER = "code" VALUE = "{ l.components[ l.count ]:id }">

			<MvSKIP NAME = "Merchant" VIEW = "TGLayouts_Components" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">

		<MvFOREACH ITERATOR = "l.component" ARRAY = "l.components">
			<MvIF EXPR = "{ NOT LayoutComponent_Update( l.component ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-UPGRADE-1013', g.TGCOMPONENTS_Error:message ) }">
			</MvIF>
		</MvFOREACH>

		<MvCOMMENT>
		|
		|	Add unique index
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components ADD UNIQUE INDEX TGLayouts_Components_3 ( layout_id, code )' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-UPGRADE-1012', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGComponents' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGComponent_Options' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Values' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache' }">

	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponents' ) }">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponents_Disp_Order' ) }">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponent_Attrs' ) }">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponent_Attrs_Disp_Order' ) }">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponents_Options' ) }">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponents_Options_Disp_Order' ) }">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGLayouts' ) }">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGLayouts_Components' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	UTIL
|
</MvCOMMENT>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation"  PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].LeftNavigation_Dot( l.indent - 1, 'Screen=SUTL&Store_Code=' $ encodeattribute( g.Store:code ) $ '&Module_Code=' $ encodeattribute( l.module:code ), 'Main', 'Components and Layouts' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ g.TGCOMPONENTS_Screen }">
		<MvEVAL EXPR = "{ ComponentsScreen_UI( g.TGCOMPONENTS_Screen ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Start( 'Components & Layouts', '', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_End( 'Components & Layouts', '', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginContent() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawTabs( 'TGCOMPONENTS', 'TGCOMPONENTS_Sets:Layouts,TGCOMPONENTS_Components:Components' ) }">

		<MvHIDE FIELDS = "g.Module_Code">

		<MvEVAL EXPR = "{ ComponentTab_UI( g.Tab ) }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].EndContent() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons( '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].EndScreen() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	JSON
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'Components_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Components_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Component_Insert' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Component_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Component_Update' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Component_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Component_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Component_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Components_DisplayOrder_Update' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Components_DisplayOrder_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layouts_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Layouts_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Insert' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Update' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Component_Attrs_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_Component_Attrs_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_Insert' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_Update' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_Delete' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_DisplayOrder_Update' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_DisplayOrder_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentOption_Insert' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentOption_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentOption_Update' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentOption_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentOption_Delete' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentOption_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Load_Components' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Load_Components( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Components_Load_All' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Components_Load_All( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Save' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Save( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Duplicate' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Duplicate( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Delete_Layout_Cache' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Delete_Layout_Cache( l..module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	CLIENTSIDE
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	<MvELSEIF EXPR = "{ ( '.css' EIN g.Filename ) EQ len_var( g.Filename ) }">	<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/css' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'components.js' }">				<MvINCLUDE FILE = "js/components.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'layouts.js' }">				<MvINCLUDE FILE = "js/layouts.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'component_attrs.js' }">		<MvINCLUDE FILE = "js/component_attrs.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'angular.min.js' }">			<MvINCLUDE FILE = "angular_app/angular.min.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'angular-ui-tree.min.js' }">	<MvINCLUDE FILE = "angular_app/angular-ui-tree.min.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'app.js' }">					<MvINCLUDE FILE = "angular_app/app.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'styles.css' }">				<MvINCLUDE FILE = "angular_app/styles.css" INTERPRET="OFF">
	<MvELSE>														<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
|	COMPONENT
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MVFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings" STANDARDOUTPUTLEVEL = "">
</MVFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, settings var, item_settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Parse_Function_Parameters( l.param, l.function_name, l.parameters, l.parameter_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.function_name EQ 'layout_load_code' }">
		<MvIF EXPR = "{ l.parameter_count NE 2 }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'There must be two parameters.' ) }">
		</MvIF>
		<MvIF EXPR = "{ NOT Is_Variable( l.parameters[ 2 ] ) }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'The second parameter must be a variable' ) }">
		</MvIF>
		<MvASSIGN NAME = "l.new_param" VALUE = "{ 'Item_Runtime_Load_Layout( l.module, l.param, ' $ l.parameters $ ')' }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.new_param }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSEMBLY>
		.string asm_0 "l.new_param"
		.string asm_1 "g.Module_Root"
		.string asm_2 "l.module"
		.string asm_3 "module"
		.string asm_4 "g.MvDO_Error"

			pushc		asm_1
			pushn
			pushc		asm_2
			pushn
			pushc		asm_3
			memb_ro
			cat
			pushc		asm_0
			pushn
			tagerror	22, 0
			do_function
			pop
			tagerror	22, 3
			pushc		asm_4
			pushn
			jmp_eq		L_asm_success
			retn
		L_asm_success:				
    </MvASSEMBLY>
</MvFUNCTION>

<MvCOMMENT>
|
|	provision_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.name"		VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.name EQ 'layout_add' }">						<MvEVAL EXPR = "{ Module_Provision_Layout_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'layout_update'}">				<MvEVAL EXPR = "{ Module_Provision_Layout_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'component_add'}">				<MvEVAL EXPR = "{ Module_Provision_Component_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'component_update'}">				<MvEVAL EXPR = "{ Module_Provision_Component_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'component_delete'}">				<MvEVAL EXPR = "{ Module_Provision_Component_Delete( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattribute_add'}">		<MvEVAL EXPR = "{ Module_Provision_ComponentAttribute_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattribute_update'}">	<MvEVAL EXPR = "{ Module_Provision_ComponentAttribute_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattribute_delete'}">	<MvEVAL EXPR = "{ Module_Provision_ComponentAttribute_Delete( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattributeoption_add'}">	<MvEVAL EXPR = "{ Module_Provision_ComponentAttributeOption_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'layoutcomponent_add'}">			<MvEVAL EXPR = "{ Module_Provision_LayoutComponent_Add( l.module, l.child_xml ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvCOMMENT>
|
|	export
|
</MvCOMMENT>

<MvFUNCTION NAME = "ExportModule_Export" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Exp_Count" VALUE = 1>

	<MvIF EXPR = "{ NOT g.Export_Continue }">
		<MvIF EXPR = "{ fexists( '/' $ g.Export_File ) }">
			<MvASSIGN NAME = "l.success" VALUE = "{ fdelete( '/' $ g.Export_File ) }">
		</MvIF>

		<MvASSIGN NAME = "l.wrapper" VALUE = "<Module code=\"TGCOMPONENTS\" feature=\"util\">">
		<MvASSIGN NAME = "l.success" VALUE = "{ file_create( '/' $ g.Export_File, 'data', l.wrapper ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Current_Export EQ 'COMPONENTS' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Start( 'Components Export Progress', 'EXPT' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Show() }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ Export_Provisioning_Components( l.output ) }">
	<MvELSEIF EXPR = "{ g.Current_Export EQ 'LAYOUTS' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Start( 'Layouts Export Progress', 'EXPT' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Show() }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ Export_Provisioning_Layouts( l.output ) }">
	</MvIF>

	<MvASSIGN NAME = "l.success" VALUE = "{ file_append( '/' $ g.Export_File, 'data', l.output ) }">

	<MvIF EXPR = "{ NOT g.Export_Continue }">
		<MvASSIGN NAME = "l.wrapper" VALUE = "</Module>">
		<MvASSIGN NAME = "l.success" VALUE = "{ file_append( '/' $ g.Export_File, 'data', l.wrapper ) }">

		<MvIF EXPR = "{ g.Export_SendEmail }">
			<MvDO FILE = "{ g.Module_Library_Utilities }" NAME = "l.null" VALUE = "{ Send_Email_Attachment( g.Export_Email, g.Export_Email, '', 'Components & Layouts Export', g.Export_File, '/', 'data' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'TGCOMPONENTS-SUCCESS-1', 'Review Export Email Sent' ) }">
		</MvIF>

		<MvIF EXPR = "{ g.Current_Export EQ 'COMPONENTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_ProgressComplete( 'Exported Components.' ) }">
		<MvELSEIF EXPR = "{ g.Current_Export EQ 'LAYOUTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_ProgressComplete( 'Exported Layouts.' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'TGCOMPONENTS-SUCCESS-2', 'Reviews Exported to ' $ g.Export_File  ) }">
	</MvIF>

	<MvHIDE FIELDS = "	g.Exp_Offset,
						g.Export_Continue,
						g.Module_Code,
						g.Exp_Count,
						g.Offset,
						g.Export_File,
						g.Export_SendEmail,
						g.Export_Email,
						g.Total_Count,
						g.Current_Export">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ExportModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Export_File"	VALUE = "{ trim( g.Export_File ) }">
	<MvASSIGN NAME = "g.Current_Export" VALUE = "{ trim( g.Current_Export ) }">

	<MvIF EXPR = "{ len( g.Export_File ) EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Export_File', 'Please specify a file' ) }">
	<MvELSE>
		<MvIF EXPR = "{ '/' IN g.Export_File }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Export_File', 'Please do not include a path in the file name' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "g.Export_Email" 	VALUE = "{ trim( g.Export_Email ) }">

	<MvIF EXPR = "{ g.Export_SendEmail }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Email( g.Export_Email ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Export_Email', 'Please specify a valid email address' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Current_Export }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Current_Export', 'Please select an export.' ) }">
	<MvELSEIF EXPR = "{ g.Current_Export NE 'COMPONENTS' AND g.Current_Export NE 'LAYOUTS' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Current_Export', 'Please select an export.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ExportModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Export_File }">
		<MvASSIGN NAME = "g.Export_File" VALUE = "component_layouts.xml">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Current_Export }">
		<MvASSIGN NAME = "g.Current_Export" VALUE = "COMPONENTS">
	</MvIF>

	<MvIF EXPR = "{ g.Export_Continue EQ 1 }">
		<script type="text/javascript">
			function exp_continue()
			{
				document.forms[ Screen ].submit();
			}
			window.onload = exp_continue;
		</script>

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_End() }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Start( 'Export Components & Layouts to XML', 'EXPT', '' ) }">
		<MvIF EXPR = "{ g.Current_Export EQ 'COMPONENTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_JavaScript( 'Exporting Components...', 'EXPT', 'EXPT' ) }">
		<MvELSEIF EXPR = "{ g.Current_Export EQ 'LAYOUTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_JavaScript( 'Exporting Layouts...', 'EXPT', 'EXPT' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_CSS() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_End( 'Export Components &amp; Layouts to XML', 'EXPT', '' ) }">
		<MvDO FILE = "{ g.Module_Admin }" NAME = "l.ok" VALUE = "{ BeginContent() }">

		<div style="font-family: sans-serif;">
			<MvHIDE FIELDS = "g.Module_Code">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Draw_FieldSet_Open( 'Export Settings', 150 ) }">
				<table cellspacing="5">
					<tr>
						<td valign="top"><strong>Export Components & Layouts to File:</strong></td>
						<td width="100%">
							<input type="text" name="Export_File" size="40" value="{ encodeentities( g.Export_File ) }"><br>
							<em>This is located in the private directory. This will be deleted if it already exists.</em>
						</td>
					</tr>
					<tr>
						<td valign="top"><strong>Export:</strong></td>
						<td width="100%">
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Current_Export', 'COMPONENTS', g.Current_Export, 'Components' ) }"><br>
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Current_Export', 'LAYOUTS', g.Current_Export, '' ) }"> 
							<select name="LAYOUT_OPTION">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 0, g.LAYOUT_OPTION, 'All Layouts' ) }">
								<MvFOREACH ITERATOR = "l.layout" ARRAY = "l.layouts" COUNT = "{ Layout_Load_All( l.layouts ) }">
									<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( l.layout:id, g.LAYOUT_OPTION, l.layout:name ) }">
								</MvFOREACH>
							</select><br>
						</td>
					</tr>
					<tr>
						<td valign="top">Email File To:</td>
						<td width="100%">
							<MvIF EXPR = "{ NOT g.Export_SendEmail }">
								<label><input type="radio" name="Export_SendEmail" value="0" checked>Do Not Email<br></label>
								<input type="radio" name="Export_SendEmail" value="1">
							<MvELSE>
								<label><input type="radio" name="Export_SendEmail" value="0">Do Not Email<br></label>
								<input type="radio" name="Export_SendEmail" value="1" checked>
							</MvIF>
							<MvIF EXPR = "{ ISNULL g.Export_Email }">
								<MvASSIGN NAME = "g.Export_Email" VALUE = "{ g.Store:email }">
							</MvIF>
							<input type="text" size="40" name="Export_Email" value="{ encodeentities( g.Export_Email ) }">
						</td>
					</tr>
				</table>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Draw_FieldSet_Close() }">
		</div>
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_HTML() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].EndContent() }">

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Buttons( 'Export', 'EXPT' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].EndScreen() }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	scheduledtask
|
</MvCOMMENT>

<MvFUNCTION NAME = "ScheduledTaskModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:provision_settings" VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Operations" PARAMETERS = "module var, operations var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.operations" INDEX = 1 MEMBER = "code"		VALUE = "check_layout_cache">
	<MvASSIGN NAME = "l.operations" INDEX = 1 MEMBER = "descrip"	VALUE = "Layout Cache & Scheduled Component Check">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Fields" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Validate" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Update" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Delete" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Execute" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation NE 'check_layout_cache' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-SCHEDULEDTASK-0001', 'Unsupported operation' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Check_Layout_Cache() }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_DB ].ScheduledTaskLog_Insert( l.task:id, 'W', g.Error_Code $ ': ' $ g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Provision_Settings" PARAMETERS = "module var, task var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	Custom Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentsTab_HeadTag" PARAMETERS = "tab" STANDARDOUTPUTLEVEL = "html, text">
	<MvIF EXPR = "{ l.tab EQ 'TGCOMPONENTS_Components' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_CSS() }">

		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=TGCOMPONENTS&Filename=components.js' }"></script>
		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new Components_Batchlist(); } );
		</script>
	<MvELSEIF EXPR = "{ l.tab EQ 'TGCOMPONENTS_Sets' }">
		<link type="text/css" rel="stylesheet" href="{ g.clientside_url $ 'Module_Code=TGCOMPONENTS&Filename=styles.css' }">
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=TGCOMPONENTS&Filename=angular.min.js' }"></script>
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=TGCOMPONENTS&Filename=angular-ui-tree.min.js' }"></script>
		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=TGCOMPONENTS&Filename=app.js' }"></script>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_CSS() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMDialog_CSS() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMDialog_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_Privileges_JavaScript() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_ProductLookup_Dialog_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_ProductLookup_Dialog_CSS() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_CategoryLookup_Dialog_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_CategoryLookup_Dialog_CSS() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_ActionDialog_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_ActionDialog_CSS() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_CategoryLookup_Dialog_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_CategoryLookup_Dialog_CSS() }">

		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=TGCOMPONENTS&Filename=layouts.js' }"></script>
		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new Layouts_Batchlist(); } );
		</script>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentTab_UI" PARAMETERS = "tab" STANDARDOUTPUTLEVEL = "html, text">
	<MvEVAL EXPR = "{ ComponentsTab_HeadTag( l.tab ) }">

	<MvIF EXPR = "{ l.tab EQ 'TGCOMPONENTS_Components' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_HTML() }">
		<div id="jsComponentBatchlist"></div>
	<MvELSEIF EXPR = "{ l.tab EQ 'TGCOMPONENTS_Sets' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_HTML() }">
		<div id="jsLayoutBatchlist"></div>

		<MvEVAL EXPR = "{ DuplicateLayout_Dialog_HTML() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMDialog_HTML() }">

		<MvEVAL EXPR = "{ Component_HTML_App() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_ActionDialog_HTML() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_ProductLookup_Dialog_HTML() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_CategoryLookup_Dialog_HTML() }">
		<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_AD ].Element_PageLookup_Dialog_HTML() }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "DuplicateLayout_Dialog_HTML" STANDARDOUTPUTLEVEL = "html, text">
	<div id="DuplicateLayout_dialog" class="mm_dialog">
		<div id="DuplicateLayout_dialog_title" class="mm_dialog_title">Duplicate Layout</div>
		<div class="mm_clear"></div>
		<table>
			<tbody>
				<tr>
					<td class="mm_dialog_prompt_required">New Code:</td>
					<td class="DuplicateLayout_dialog_field">
						<input type="text" name="new_code" id="DuplicateLayout_New_Code">
					</td>
				</tr>
				<tr>
					<td class="mm_dialog_prompt_required">New Name:</td>
					<td class="DuplicateLayout_dialog_field">
						<input type="text" name="new_name" id="DuplicateLayout_New_Name">
					</td>
				</tr>
			</tbody>
		</table>
		<div class="mm_dialog_buttons_left">
			<input id="DuplicateLayout_dialog_button_cancel" type="button" value="Cancel">
		</div>
		<div class="mm_dialog_buttons_right"><input id="DuplicateLayout_dialog_button_save" type="button" value="Add"></div>
	</div>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentsScreen_HeadTag" PARAMETERS = "screen" STANDARDOUTPUTLEVEL = "html, text">
	<MvIF EXPR = "{ l.screen EQ 'Component' }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_JavaScript() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_CSS() }">

		<script language="JavaScript" src="{ g.clientside_url $ 'Module_Code=TGCOMPONENTS&Filename=component_attrs.js' }"></script>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].JavaScript_Set_A_Variable( 'component_id', g.Component_ID ) }">

		<script language="JavaScript">
			MMScreen_LoadFinished( function() { new ComponentAttrs_Batchlist( component_id ); } );
		</script>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentsScreen_UI" PARAMETERS = "screen" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Start( 'Components', '', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">

	<MvIF EXPR = "{ l.screen EQ 'Component' }">
		<MvIF EXPR = "{ NOT Component_Load_ID( g.Component_ID, l.component ) }">
			ERROR: Could not load Screen for Component ID: <MvEVAL EXPR = "{ encodeentities( g.Component_ID ) }">.
		<MvELSE>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_End( 'Component: ' $ encodeentities( l.component:name ), encodeentities( l.component:name ), '' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginContent() }">

			<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawTabs( 'TGCOMPONENTS_SCREEN', 'TGCOMPONENTS_SCREEN_Components:Attributes' ) }">

			<MvHIDE FIELDS = "g.Module_Code,g.TGCOMPONENTS_Screen,g.Component_ID">

			<MvEVAL EXPR = "{ ComponentsScreen_HeadTag( l.screen ) }">

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_MMBatchList_HTML() }">
			<div id="jsComponentAttributes"></div>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].EndContent() }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons( '' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].EndScreen() }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_HTML_App" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<div id="ComponentsController_ID" ng-controller="ComponentsController" ng-app="Components" ng-mouseup="toggleNodeActions();">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].MMDialog_Begin( 'layout_dialog' ) }">
		<MvINCLUDE FILE = "angular_app/app-dialog.mv" INTERPRET="OFF">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].MMDialog_End( 'layout_dialog' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].MMDialog_Begin( 'layoutcomponent' ) }">
		<MvINCLUDE FILE = "angular_app/app-component-dialog.mv" INTERPRET="OFF">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].MMDialog_End( 'layoutcomponent' ) }">
		<MvINCLUDE FILE = "angular_app/app.html" INTERPRET="OFF">
	</div>
</MvFUNCTION>

<MvFUNCTION NAME = "Components_Load_All" PARAMETERS = "return var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponents"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponents ORDER BY disp_order' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0002', 'Could not load all Components.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponents.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTS-0003' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGComponents.d.EOF }">
		<MvASSIGN NAME = "l.null"	VALUE = "{ Component_Read( l.return[ ++l.count ] ) }">
		<MvASSIGN NAME = "l.null"	VALUE = "{ Components_Attrs_Load_All_ID( l.return[ l.count ]:id, l.return[ l.count ]:attributes ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGComponents" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Item_Runtime_Load_Layout" PARAMETERS = "module var, param, layout_code, return var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ Runtime_Load_Layout( l.layout_code, l.return ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Read" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component:id"				VALUE = "{ TGComponents.d.id }">
	<MvASSIGN NAME = "l.component:code"				VALUE = "{ TGComponents.d.code }">
	<MvASSIGN NAME = "l.component:name"				VALUE = "{ TGComponents.d.name }">
	<MvASSIGN NAME = "l.component:descrip"			VALUE = "{ TGComponents.d.descrip }">
	<MvASSIGN NAME = "l.component:image"			VALUE = "{ TGComponents.d.image }">
	<MvASSIGN NAME = "l.component:allow_children"	VALUE = "{ TGComponents.d.allow_children }">
	<MvASSIGN NAME = "l.component:disp_order"		VALUE = "{ TGComponents.d.disp_order }">
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Insert_Lowlevel" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents' ) }">
	<MvASSIGN NAME = "l.component:disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents_Disp_Order' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGComponents
						  ( id, code, name, descrip, image, allow_children, disp_order )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.component:id, l.component:code, l.component:name, l.component:descrip, l.component:image, l.component:allow_children, l.component:disp_order">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0001', 'Could not insert Component.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Insert" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component:code"				VALUE = "{ trim( l.component:code ) }">
	<MvASSIGN NAME = "l.component:name"				VALUE = "{ trim( l.component:name ) }">
	<MvASSIGN NAME = "l.component:allow_children"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.component:allow_children ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.component:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Validation_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ Component_Load_Code( l.component:code, l.null ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Insert_Lowlevel( l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Error_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.id" VALUE = "{ int( l.id ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponents"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0002', 'Could not load component.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponents.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTS-0003' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Component_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Load_Code" PARAMETERS = "code, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponents"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE code = ?' }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0004', 'Could not load component.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponents.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTS-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Component_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Update_LowLevel" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component:code"				VALUE = "{ trim( l.component:code ) }">
	<MvASSIGN NAME = "l.component:name"				VALUE = "{ trim( l.component:name ) }">
	<MvASSIGN NAME = "l.component:allow_children"	VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.component:allow_children ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGComponents
						  SET
							code = ?,
							name = ?,
							descrip = ?,
							image = ?,
							allow_children = ?
						  WHERE
							id		= ?' }"
			 FIELDS	= "l.component:code, l.component:name, l.component:descrip, l.component:image, l.component:allow_children, l.component:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0006', 'Could not update component.' ) }">
	</MvIF>

	<MvIF EXPR = "{ Component_Layout_Reference( l.component:id, l.layouts ) }">
		<MvFOREACH ITERATOR = "l.layout" ARRAY = "l.layouts">
			<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Delete( l.layout:id ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Update" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Component_Load_ID( l.component:id, l.prev_component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This component can not be found.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component:code }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Code must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.component:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Validation_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ toupper( l.component:code ) NE toupper( l.prev_component:code ) }">
		<MvIF EXPR = "{ Component_Load_Code( l.component:code, l.null ) }">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist.">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Component_Update_LowLevel( l.component ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Delete" PARAMETERS = "component_id" STANDARDOUTPUTLEVEL = ""  ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Component_Layout_Reference( l.component_id, l.layouts ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This component is referenced in the following layout(s): ">
		<MvASSIGN NAME = "l.count"						VALUE = 0>

		<MvFOREACH ITERATOR = "l.layout" ARRAY = "l.layouts">
			<MvASSIGN NAME = "l.count" VALUE = "{ l.count + 1 }">

			<MvIF EXPR = "{ l.count GT 1 }">
				<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message" VALUE = "{ g.TGCOMPONENTS_Error:message $ ', ' }">
			</MvIF>

			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message" VALUE = "{ g.TGCOMPONENTS_Error:message $ l.layout:code }">
		</MvFOREACH>

		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name" VALUE = "referenced_component">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE id = ?' }"
			 FIELDS	= "l.component_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Could not delete component.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0007', 'Could not delete component.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Delete_Component( l.component_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Layout_Reference" PARAMETERS = "component_id, layouts var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT DISTINCT( lc.layout_id ) AS layout_id, l.code AS layout_code  FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components lc LEFT JOIN ' $ g.Store_Table_Prefix $ 'TGLayouts l ON lc.layout_id = l.id WHERE component_id = ?' }"
				FIELDS	= "l.component_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-LAYOUT-1000', 'Could not load layouts referencing the component.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGLayouts_Components.d.EOF }">
		<MvASSIGN NAME = "l.temp:id"		VALUE = "{ TGLayouts_Components.d.layout_id }">
		<MvASSIGN NAME = "l.temp:code"		VALUE = "{ TGLayouts_Components.d.layout_code }">
		<MvASSIGN NAME = "l.layouts_count"	VALUE = "{ miva_array_insert_var( l.layouts, l.temp, -1 ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts_Components" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">

	<MvFUNCTIONRETURN VALUE = "{ l.layouts_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Components_Update_Offsets" PARAMETERS = "components var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count"						VALUE = 0>

	<MvASSIGN NAME = "l.state_pos"							VALUE = 1>
	<MvASSIGN NAME = "l.state_count"						VALUE = "{ miva_array_elements( l.components ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.components, l.state_count ) }">

	<MvWHILE EXPR = "{ l.state_pos LE l.state_count }">
		<MvASSIGN NAME = "g.Components_Order_ID"		VALUE = "{ l.components[ l.state_pos ]:id }">

		<MvCOMMENT>
		|
		| Determine disp_order of current state at this offset.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				   'TGComponents',
																				   'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE id <> ? ORDER BY disp_order',
																				   'g.Components_Order_ID',
																				   l.components[ l.state_pos ]:offset - 1,
																				   1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-DISPORDER-00001', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ TGComponents.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

			<MvCOMMENT>
			|
			| Offset was higher than the last record.  This case requires specialized processing, so save this record for later.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.pastend_count"							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }"	VALUE = "{ l.components[ l.state_pos ] }">

			<MvASSIGN NAME = "l.state_pos"	VALUE = "{ l.state_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

			<MvIF EXPR = "{ NOT Components_Update_Offsets_PastEnd( l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ TGComponents.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

			<MvCOMMENT>
			|
			| Make a hole by shifting components after this disp_order down
			|
			</MvCOMMENT>

			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'UPDATE ' 
									$ g.Store_Table_Prefix $ 'TGComponents 
								  SET 
									disp_order = disp_order + 1 
								  WHERE 
									disp_order>= ?' }" 
					 FIELDS	= "l.disp_order">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-DISPORDER-00002', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents_Disp_Order' ) }">

			<MvCOMMENT>
			|
			| Put the state in the newly created hole
			|
			</MvCOMMENT>

			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'UPDATE ' 
									$ g.Store_Table_Prefix $ 'TGComponents 
								  SET 
									disp_order = ? 
								  WHERE 
									id = ?' }" 
					 FIELDS	= "l.disp_order, g.Components_Order_ID">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-DISPORDER-00003', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.state_pos"	VALUE = "{ l.state_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| If all the downward records were past the end, they must be processed here.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT Components_Update_Offsets_PastEnd( l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>		

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Components_Update_Offsets_PastEnd" PARAMETERS = "pastend var, pastend_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Process records moving past the end.  These records must be sorted in ascending order.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">

	<MvASSIGN NAME = "l.pastend_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "g.Components_Order_ID" 	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"					VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents_Disp_Order' ) }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' 
								$ g.Store_Table_Prefix $ 'TGComponents 
							  SET 
								disp_order = ? 
							  WHERE 
								id = ?' }" 
				 FIELDS	= "l.disp_order, g.Components_Order_ID">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-DISPORDER-00004', g.MvQUERY_Error ) }">
		</MvIF>

		<MvASSIGN NAME = "l.pastend_pos"	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Component_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.component:code"				VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "l.component:name"				VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Name ) }">
	<MvASSIGN NAME = "l.component:descrip"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Descrip ) }">
	<MvASSIGN NAME = "l.component:image"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Image ) }">
	<MvASSIGN NAME = "l.component:allow_children"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Allow_Children ) }">

	<MvIF EXPR = "{ NOT Component_Insert( l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Component_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.component:id"				VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Id ) }">
	<MvASSIGN NAME = "l.component:code"				VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "l.component:name"				VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Name ) }">
	<MvASSIGN NAME = "l.component:descrip"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Descrip ) }">
	<MvASSIGN NAME = "l.component:image"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Image ) }">
	<MvASSIGN NAME = "l.component:allow_children"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Allow_Children ) }">

	<MvIF EXPR = "{ NOT Component_Update( l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Component_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Id" VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Id ) }">

	<MvIF EXPR = "{ NOT Component_Delete( g.Id ) }">
		<MvIF EXPR = "{ g.TGCOMPONENTS_Error:name EQ 'referenced_component' }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGCOMPONENTS_Error', g.TGCOMPONENTS_Error:message ) }">
		</MvIF>

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Components_DisplayOrder_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvFOREACH ITERATOR = "l.component" ARRAY = "g.Components_Order" INDEX = "l.pos">
		<MvASSIGN NAME = "l.component:id"				VALUE = "{ int( l.component:id ) }">
		<MvASSIGN NAME = "l.component:offset"			VALUE = "{ int( l.component:offset ) }">
		<MvASSIGN NAME = "l.component:original_offset"	VALUE = "{ int( l.component:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.component:offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Components_Order[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.change_count"							VALUE = 0>

	<MvFOREACH ITERATOR = "l.component" ARRAY = "g.Components_Order">
		<MvASSIGN NAME = "l.changes" INDEX = "{ ++l.change_count }"	VALUE = "{ l.component }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.change_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT Components_Update_Offsets( l.changes ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Read" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout:id"		VALUE = "{ TGLayouts.d.id }">
	<MvASSIGN NAME = "l.layout:code"	VALUE = "{ TGLayouts.d.code }">
	<MvASSIGN NAME = "l.layout:name"	VALUE = "{ TGLayouts.d.name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Insert_Lowlevel" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGLayouts' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayouts
						  ( id, code, name )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.layout:id, l.layout:code, l.layout:name">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTS-0001', 'Could not add Layout.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Insert" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout:code" VALUE = "{ trim( l.layout:code ) }">
	<MvASSIGN NAME = "l.layout:name" VALUE = "{ trim( l.layout:name ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.layout:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Validation_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ Layout_Load_Code( l.layout:code, l.null ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.layout:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Insert_Lowlevel( l.layout ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Error_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-LAYOUTS-0002', 'Could not load layout.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGCOMPONENTS-LAYOUTS-0003' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Layout_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Load_Code" PARAMETERS = "code, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts WHERE code = ?' }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTS-0004', 'Could not load layout.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-LAYOUTS-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Layout_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Update_LowLevel" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGLayouts
						  SET
							code = ?,
							name = ?
						  WHERE
							id		= ?' }"
			 FIELDS	= "l.layout:code, l.layout:name, l.layout:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTS-0006', 'Could not update layout.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Recache( l.layout:id ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Update" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Layout_Load_ID( l.layout:id, l.prev_layout ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This component can not be found.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.layout:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Validation_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ toupper( l.layout:code ) NE toupper( l.prev_layout:code ) }">
		<MvIF EXPR = "{ Layout_Load_Code( l.layout:code, l.null ) }">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist.">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.layout:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Layout_Update_LowLevel( l.layout ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Delete" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts WHERE id = ?' }"
			 FIELDS	= "l.layout_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Could not delete layout.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTS-0007', 'Could not delete layout.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Delete_Components( l.layout_id ) }">
		<MVFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Delete( l.layout_id ) }">	

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Load_All" PARAMETERS = "layouts var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-LAYOUT-1008', 'Could not load all layouts.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGLayouts.d.EOF }">

		<MvEVAL EXPR = "{ Layout_Read( l.layouts[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'TGCOMPONENT-LAYOUT-1009', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.layout:code" VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "l.layout:name" VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Name ) }">

	<MvIF EXPR = "{ NOT Layout_Insert( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.layout:id"		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Id ) }">
	<MvASSIGN NAME = "l.layout:code"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "l.layout:name"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Name ) }">

	<MvIF EXPR = "{ NOT Layout_Update( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Id" VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Id ) }">

	<MvIF EXPR = "{ NOT Layout_Delete( g.Id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Read" PARAMETERS = "component_attrs var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attrs:id"				VALUE = "{ TGComponent_Attrs.d.id }">
	<MvASSIGN NAME = "l.component_attrs:component_id"	VALUE = "{ TGComponent_Attrs.d.component_id }">
	<MvASSIGN NAME = "l.component_attrs:code"			VALUE = "{ TGComponent_Attrs.d.code }">
	<MvASSIGN NAME = "l.component_attrs:prompt"			VALUE = "{ TGComponent_Attrs.d.prompt }">
	<MvASSIGN NAME = "l.component_attrs:type"			VALUE = "{ TGComponent_Attrs.d.type }">
	<MvASSIGN NAME = "l.component_attrs:required"		VALUE = "{ TGComponent_Attrs.d.required }">
	<MvASSIGN NAME = "l.component_attrs:disp_order"		VALUE = "{ TGComponent_Attrs.d.disp_order }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Insert_Lowlevel" PARAMETERS = "component_attrs var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attrs:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Attrs' ) }">
	<MvASSIGN NAME = "l.component_attrs:disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Attrs_Disp_Order' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs
						  ( id, component_id, code, prompt, type, required, disp_order )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.component_attrs:id, l.component_attrs:component_id, l.component_attrs:code, l.component_attrs:prompt, l.component_attrs:type, l.component_attrs:required, l.component_attrs:disp_order">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0001', 'Could not add attribute to component.' ) }">
	</MvIF>

	<MvIF EXPR = "{ Component_Layout_Reference( l.component_attrs:component_id, l.layouts ) }">
		<MvFOREACH ITERATOR = "l.layout" ARRAY = "l.layouts">
			<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Delete( l.layout:id ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Insert" PARAMETERS = "component_attrs var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attrs:code"			VALUE = "{ trim( l.component_attrs:code ) }">
	<MvASSIGN NAME = "l.component_attrs:component_id"	VALUE = "{ int( l.component_attrs:component_id ) }">
	<MvASSIGN NAME = "l.component_attrs:prompt"			VALUE = "{ trim( l.component_attrs:prompt ) }">
	<MvASSIGN NAME = "l.component_attrs:required"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.component_attrs:required ) }">
	<MvASSIGN NAME = "l.component_attrs:type"			VALUE = "{ trim( l.component_attrs:type ) }">

	<MvIF EXPR = "{ ISNULL l.component_attrs:component_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_ID( l.component_attrs:component_id, l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.component_attrs:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Validation_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ComponentAttrs_Load_Code( l.component_attrs:component_id, l.component_attrs:code, l.null ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist for this component.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_attrs:prompt }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Prompt must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "prompt">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_attrs:type }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Type must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "type">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Validate_ComponentAttr_Type( l.component_attrs:type ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Invalid value for Type.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "type">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Insert_Lowlevel( l.component_attrs ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Error_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_ComponentAttr_Type" PARAMETERS = "type" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{
		l.type NE 'radio'		AND
		l.type NE 'select'		AND
		l.type NE 'checkbox'	AND
		l.type NE 'text'		AND
		l.type NE 'memo'		AND
		l.type NE 'image'		AND
		l.type NE 'product'		AND
		l.type NE 'category'	AND
		l.type NE 'link'		AND
		l.type NE 'imagetype'	AND
		l.type NE 'datetime'	AND
		l.type NE 'multitext'
	}">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME ="ComponentAttrs_Load_Code" PARAMETERS = "component_id, code, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Attrs"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE component_id = ? AND code = ?' }"
				FIELDS	= "l.component_id, l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0002', 'Could not load component attribute.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponent_Attrs.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTATTRS-0003' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ComponentAttrs_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Attrs"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0004', 'Could not load component attribute.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponent_Attrs.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTATTRS-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ComponentAttrs_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Update_Lowlevel" PARAMETERS = "component_attrs var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs
						  SET
							code = ?,
							prompt = ?,
							type = ?,
							required = ?
						  WHERE
							id		= ?' }"
			 FIELDS	= "l.component_attrs:code, l.component_attrs:prompt, l.component_attrs:type, l.component_attrs:required, l.component_attrs:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0006', 'Could not update component attribute.' ) }">
	</MvIF>

	<MvIF EXPR = "{ Component_Layout_Reference( l.component_attrs:component_id, l.layouts ) }">
		<MvFOREACH ITERATOR = "l.layout" ARRAY = "l.layouts">
			<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Delete( l.layout:id ) }">
		</MvFOREACH>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Update" PARAMETERS = "component_attrs var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attrs:component_id"	VALUE = "{ int( l.component_attrs:component_id ) }">
	<MvASSIGN NAME = "l.component_attrs:code"			VALUE = "{ trim( l.component_attrs:code ) }">
	<MvASSIGN NAME = "l.component_attrs:prompt"			VALUE = "{ trim( l.component_attrs:prompt ) }">
	<MvASSIGN NAME = "l.component_attrs:type"			VALUE = "{ trim( l.component_attrs:type ) }">
	<MvASSIGN NAME = "l.component_attrs:required"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.component_attrs:required ) }">

	<MvIF EXPR = "{ ISNULL l.component_attrs:component_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.component_attrs:id, l.prev_component_attrs ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This component can not be found.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_ID( l.component_attrs:component_id, l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.component_attrs:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Validation_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ toupper( l.component_attrs:code ) NE toupper( l.prev_component_attrs:code ) }">
		<MvIF EXPR = "{ ComponentAttrs_Load_Code( l.component_attrs:component_id, l.component_attrs:code, l.null ) }">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist for this component.">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_attrs:prompt }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Prompt must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "prompt">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_attrs:type }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Type must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "type">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Validate_ComponentAttr_Type( l.component_attrs:type ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Invalid value for Type.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "type">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ComponentAttrs_Update_Lowlevel( l.component_attrs ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Delete" PARAMETERS = "component_attr_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE id = ?' }"
			 FIELDS	= "l.component_attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Could not delete component attribute.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0007', 'Could not delete component attribute.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ComponentOptions_Delete_Attr( l.component_attr_id ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Delete_Component" PARAMETERS = "component_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Attrs"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE component_id = ?' }"
				FIELDS	= "l.component_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-LAYOUT-1000', 'Could not delete component attribute.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGComponent_Attrs.d.EOF }">

		<MvIF EXPR = "{ NOT ComponentAttrs_Delete( TGComponent_Attrs.d.id  ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "TGComponent_Attrs" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentAttrs_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.component_attr:component_id"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Component_Id ) }">
	<MvASSIGN NAME = "l.component_attr:code"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "l.component_attr:prompt"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Prompt ) }">
	<MvASSIGN NAME = "l.component_attr:type"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.type ) }">
	<MvASSIGN NAME = "l.component_attr:required"		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Required ) }">

	<MvIF EXPR = "{ NOT ComponentAttrs_Insert( l.component_attr ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentAttrs_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.component_attr:id"				VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Id ) }">
	<MvASSIGN NAME = "l.component_attr:component_id"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Component_Id ) }">
	<MvASSIGN NAME = "l.component_attr:code"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "l.component_attr:prompt"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Prompt ) }">
	<MvASSIGN NAME = "l.component_attr:type"			VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.type ) }">
	<MvASSIGN NAME = "l.component_attr:required"		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Required ) }">

	<MvIF EXPR = "{ NOT ComponentAttrs_Update( l.component_attr ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentAttrs_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Id" VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Id ) }">

	<MvIF EXPR = "{ NOT ComponentAttrs_Delete( g.Id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentAttrs_DisplayOrder_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.component_id" VALUE = "{ g.component_id }">

	<MvFOREACH ITERATOR = "l.attrs_order" ARRAY = "g.Components_Order" INDEX = "l.pos">
		<MvASSIGN NAME = "l.attrs_order:id"					VALUE = "{ int( l.attrs_order:id ) }">
		<MvASSIGN NAME = "l.attrs_order:offset"				VALUE = "{ int( l.attrs_order:offset ) }">
		<MvASSIGN NAME = "l.attrs_order:original_offset"	VALUE = "{ int( l.attrs_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.attrs_order:offset ) }">
			<MvFUNCTIONRETURN VALUE VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Components_Order[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.attrs_order" ARRAY = "g.Option_Order" INDEX = "l.attr_pos">
		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.attrs_order" INDEX = "l.option_pos">
			<MvASSIGN NAME = "l.option_order:id"				VALUE = "{ int( l.option_order:id ) }">
			<MvASSIGN NAME = "l.option_order:offset"			VALUE = "{ int( l.option_order:offset ) }">
			<MvASSIGN NAME = "l.option_order:original_offset"	VALUE = "{ int( l.option_order:original_offset ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.option_order:offset ) }">
				<MvFUNCTIONRETURN VALUE VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Option_Order[' $ l.attr_pos $ '][ ' $ l.option_pos $ ' ]', g.Validation_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvASSIGN NAME = "l.field_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.attrs_order" ARRAY = "g.Components_Order">
		<MvIF EXPR = "{ l.attrs_order:offset EQ l.attrs_order:original_offset }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.attr_changes" INDEX = "{ ++l.field_count }" VALUE = "{ l.attrs_order }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.field_count }">
		<MvIF EXPR = "{ NOT ComponentAttrs_Update_Offsets( l.component_id, l.attr_changes ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.attrs_order" ARRAY = "g.Option_Order" INDEX = "l.attr_id">
		<MvASSIGN NAME = "l.option_count" VALUE = 0>

		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.attrs_order" INDEX = "l.option_pos">
			<MvIF EXPR = "{ l.option_order:offset EQ l.option_order:original_offset }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.option_changes" INDEX = "{ ++l.option_count }" VALUE = "{ l.option_order }">
		</MvFOREACH>

		<MvIF EXPR = "{ l.option_count }">
			<MvIF EXPR = "{ NOT ComponentOptions_Update_Offsets( l.attr_id, l.option_changes ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Update_Offsets" PARAMETERS = "component_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count"			VALUE = 0>

	<MvASSIGN NAME = "l.field_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.field_count"			VALUE = "{ miva_array_elements( l.fields ) }">
	<MvASSIGN NAME = "g.Field_component_id"		VALUE = "{ l.component_id }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.fields, l.field_count ) }">

	<MvWHILE EXPR = "{ l.field_pos LE l.field_count }">
		<MvASSIGN NAME = "g.ComponentAttrs_ID" 	VALUE = "{ l.fields[ l.field_pos ]:id }">

		<MvCOMMENT>
		|
		| Determine disp_order of current field at this offset.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				   'TGComponent_Attrs',
																				   'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE id <> ? AND component_id = ? ORDER BY disp_order',
																				   'g.ComponentAttrs_ID, g.Field_component_id',
																				   l.fields[ l.field_pos ]:offset - 1,
																				   1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-DISPORDER-0009', 'Could not load display order for component attribute.' ) }">
		</MvIF>

		<MvIF EXPR = "{ TGComponent_Attrs.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

			<MvCOMMENT>
			|
			| Offset was higher than the last record.  This case requires specialized processing, so save this record for later.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.pastend_count"							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }"	VALUE = "{ l.fields[ l.field_pos ] }">

			<MvASSIGN NAME = "l.field_pos"	VALUE = "{ l.field_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

			<MvIF EXPR = "{ NOT ComponentAttrs_Update_Offsets_PastEnd( l.component_id, l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ TGComponent_Attrs.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

			<MvCOMMENT>
			|
			| Make a hole by shifting fields after this disp_order down
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGComponent_Attrs 
													SET 
														disp_order = disp_order + 1 
													WHERE 
														disp_order>= ? AND component_id = ?' }" 
													FIELDS = "l.disp_order, l.component_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-DISPORDER-0010', 'Could not update display order for component attribute.' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Attrs_Disp_Order' ) }">

			<MvCOMMENT>
			|
			| Put the field in the newly created hole
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGComponent_Attrs 
													SET 
														disp_order = ? 
													WHERE 
														id = ? AND component_id = ?' }" 
													FIELDS = "l.disp_order, g.ComponentAttrs_ID, l.component_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-DISPORDER-0011', 'Could not update display order for component attribute.' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.field_pos"	VALUE = "{ l.field_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| If all the downward records were past the end, they must be processed here.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT ComponentAttrs_Update_Offsets_PastEnd( l.component_id, l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>		

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Update_Offsets_PastEnd" PARAMETERS = "component_id, pastend var, pastend_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Process records moving past the end.  These records must be sorted in ascending order.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">

	<MvASSIGN NAME = "l.pastend_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "g.ComponentAttrs_ID" 	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Attrs_Disp_Order' ) }">

		<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
													$ g.Store_Table_Prefix $ 'TGComponent_Attrs 
												SET 
													disp_order = ? 
												WHERE 
													id = ? AND component_id = ?' }" 
												FIELDS = "l.disp_order, g.ComponentAttrs_ID, l.component_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-DISPORDER-0012', 'Could not update display order for component attribute.' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.pastend_pos"	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOptions_Update_Offsets" PARAMETERS = "attr_id, options var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count"				VALUE = 0>

	<MvASSIGN NAME = "l.option_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.option_count"			VALUE = "{ miva_array_elements( l.options ) }">
	<MvASSIGN NAME = "g.Option_attr_id" 		VALUE = "{ l.attr_id }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.options, l.option_count ) }">

	<MvWHILE EXPR = "{ l.option_pos LE l.option_count }">
		<MvASSIGN NAME = "g.Option_Order_AttrID" 	VALUE = "{ l.options[ l.option_pos ]:id }">

		<MvCOMMENT>
		|
		| Determine disp_order of current option at this offset.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				   'TGComponent_Options',
																				   'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Options WHERE id <> ? AND attr_id = ? ORDER BY disp_order',
																				   'g.Option_Order_AttrID, g.Option_attr_id',
																				   l.options[ l.option_pos ]:offset - 1,
																				   1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-OPTION-0009', 'Could not load display order for attribute option.' ) }">
		</MvIF>

		<MvIF EXPR = "{ TGComponent_Options.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">

			<MvCOMMENT>
			|
			| Offset was higher than the last record.  This case requires specialized processing, so save this record for later.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.pastend_count"							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }"	VALUE = "{ l.options[ l.option_pos ] }">

			<MvASSIGN NAME = "l.option_pos"	VALUE = "{ l.option_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">

			<MvIF EXPR = "{ NOT ComponentOptions_Update_Offsets_PastEnd( l.data_id, l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ TGComponent_Options.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">

			<MvCOMMENT>
			|
			| Make a hole by shifting options after this disp_order down
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGComponent_Options 
													SET 
														disp_order = disp_order + 1 
													WHERE 
														disp_order>= ? AND attr_id = ?' }" 
													FIELDS = "l.disp_order, l.attr_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-OPTION-0010', 'Could not update display order for attribute option.' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents_Options_Disp_Order' ) }">

			<MvCOMMENT>
			|
			| Put the option in the newly created hole
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGComponent_Options 
													SET 
														disp_order = ? 
													WHERE 
														id = ? AND attr_id = ?' }" 
													FIELDS = "l.disp_order, g.Option_Order_AttrID, l.attr_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-OPTION-0011', 'Could not update display order for attribute option.' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.option_pos"	VALUE = "{ l.option_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| If all the downward records were past the end, they must be processed here.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT ComponentOptions_Update_Offsets_PastEnd( l.data_id, l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>		

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOptions_Update_Offsets_PastEnd" PARAMETERS = "attr_id, pastend var, pastend_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Process records moving past the end.  These records must be sorted in ascending order.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">

	<MvASSIGN NAME = "l.pastend_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "g.Option_Order_AttrID" 	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents_Options_Disp_Order' ) }">

		<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
													$ g.Store_Table_Prefix $ 'TGComponent_Options 
												SET 
													disp_order = ? 
												WHERE 
													id = ? AND attr_id = ?' }" 
												FIELDS = "l.disp_order, g.Option_Order_AttrID, l.attr_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-OPTION-0012', 'Could not update display order for attribute option.' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.pastend_pos"	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Read" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_option:id"			VALUE = "{ TGComponent_Options.d.id }">
	<MvASSIGN NAME = "l.component_option:attr_id"		VALUE = "{ TGComponent_Options.d.attr_id }">
	<MvASSIGN NAME = "l.component_option:prompt"		VALUE = "{ TGComponent_Options.d.prompt }">
	<MvASSIGN NAME = "l.component_option:disp_order"	VALUE = "{ TGComponent_Options.d.disp_order }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Insert_Lowlevel" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_option:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Options' ) }">
	<MvASSIGN NAME = "l.component_option:disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Options_Disp_Order' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGComponent_Options
						  ( id, attr_id, prompt, disp_order )
						  VALUES
						  ( ?, ?, ?, ? )' }"
			 FIELDS	= "l.component_option:id, l.component_option:attr_id, l.component_option:prompt, l.component_option:disp_order">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTOPTION-0001', 'Could not insert option.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Insert" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_option:prompt"	VALUE = "{ trim( l.component_option:prompt ) }">
	<MvASSIGN NAME = "l.component_option:attr_id"	VALUE = "{ int( l.component_option:attr_id ) }">

	<MvIF EXPR = "{ l.component_option:attr_id EQ 0 }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.component_option:attr_id, l.component_attr ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_option:prompt }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Prompt must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "prompt">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentOption_Insert_Lowlevel( l.component_option ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Error_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Options"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Options WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTOPTION-0004', 'Could not load option.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponent_Options.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTOPTION-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ComponentOption_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Update_Lowlevel" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGComponent_Options SET 
			 					prompt = ? 
			 				WHERE 
			 					id = ?' }"
				FIELDS	= "l.component_option:prompt, l.component_option:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTOPTION-0006', 'Could not update option.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Update" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_option:prompt" VALUE = "{ trim( l.component_option:prompt ) }">

	<MvIF EXPR = "{ ISNULL l.component_option:attr_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.component_option:attr_id, l.component_attr ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_option:prompt }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Prompt must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "prompt">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ComponentOption_Update_Lowlevel( l.component_option ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Delete" PARAMETERS = "component_option_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Options WHERE id = ?' }"
			 FIELDS	= "l.component_option_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Could not delete option.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTOPTION-0007', 'Could not delete option.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOptions_Delete_Attr" PARAMETERS = "component_attr_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Options WHERE attr_id = ?' }"
			 FIELDS	= "l.component_attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Could not delete all options.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTOPTION-0008', 'Could not delete all options.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentOption_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.component_attr:attr_id"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Attr_ID ) }">
	<MvASSIGN NAME = "l.component_attr:prompt"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Prompt ) }">

	<MvIF EXPR = "{ NOT ComponentOption_Insert( l.component_attr ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentOption_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.component_attr:id"		VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Id ) }">
	<MvASSIGN NAME = "l.component_attr:attr_id"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Attr_ID ) }">
	<MvASSIGN NAME = "l.component_attr:prompt"	VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Prompt ) }">

	<MvIF EXPR = "{ NOT ComponentOption_Update( l.component_attr ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentOption_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Id" VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Id ) }">

	<MvIF EXPR = "{ NOT ComponentOption_Delete( g.Id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Read" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component:id"			VALUE = "{ TGLayouts_Components.d.id }">
	<MvASSIGN NAME = "l.layout_component:layout_id"		VALUE = "{ TGLayouts_Components.d.layout_id }">
	<MvASSIGN NAME = "l.layout_component:component_id"	VALUE = "{ TGLayouts_Components.d.component_id }">
	<MvASSIGN NAME = "l.layout_component:name"			VALUE = "{ TGLayouts_Components.d.name }">
	<MvASSIGN NAME = "l.layout_component:parent"		VALUE = "{ TGLayouts_Components.d.parent }">
	<MvASSIGN NAME = "l.layout_component:active"		VALUE = "{ TGLayouts_Components.d.active }">
	<MvASSIGN NAME = "l.layout_component:disp_order"	VALUE = "{ TGLayouts_Components.d.disp_order }">
	<MvASSIGN NAME = "l.layout_component:dt_start"		VALUE = "{ TGLayouts_Components.d.dt_start }">
	<MvASSIGN NAME = "l.layout_component:dt_end"		VALUE = "{ TGLayouts_Components.d.dt_end }">
	<MvASSIGN NAME = "l.layout_component:code"			VALUE = "{ TGLayouts_Components.d.code }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Insert_Lowlevel" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component:id"		VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGLayouts_Components' ) }">
	<MvASSIGN NAME = "l.layout_component:parent"	VALUE = "{ int( l.layout_component:parent ) }">
	<MvASSIGN NAME = "l.layout_component:dt_start"	VALUE = "{ int( l.layout_component:dt_start ) }">
	<MvASSIGN NAME = "l.layout_component:dt_end"	VALUE = "{ int( l.layout_component:dt_end ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayouts_Components
						  ( id, layout_id, component_id, name, parent, active, disp_order, dt_start, dt_end, code )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.layout_component:id, l.layout_component:layout_id, l.layout_component:component_id, l.layout_component:name, l.layout_component:parent, l.layout_component:active, l.layout_component:disp_order, l.layout_component:dt_start, l.layout_component:dt_end, l.layout_component:code">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCOMPONENTS-0001', 'Could not add component to layout.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Insert" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component:name" VALUE = "{ trim( l.layout_component:name ) }">
	<MvASSIGN NAME = "l.layout_component:code" VALUE = "{ trim( l.layout_component:code ) }">

	<MvIF EXPR = "{ ISNULL l.layout_component:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.layout_component:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Validation_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.layout_component:layout_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layout_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.layout_component:component_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Load_ID( l.layout_component:layout_id, l.layout )}">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layout_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_ID( l.layout_component:component_id, l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutComponent_Insert_Lowlevel( l.layout_component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Error_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCOMPONENTS-0004', 'Could not load layout component.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Components.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-LAYOUTCOMPONENTS-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ LayoutComponent_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Update_Lowlevel" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component:parent"		VALUE = "{ int( l.layout_component:parent ) }">
	<MvASSIGN NAME = "l.layout_component:dt_start"		VALUE = "{ int( l.layout_component:dt_start ) }">
	<MvASSIGN NAME = "l.layout_component:dt_end"		VALUE = "{ int( l.layout_component:dt_end ) }">
	<MvASSIGN NAME = "l.layout_component:active"		VALUE = "{ [ g.Module_Admin ].Trim_Boolean( l.layout_component:active ) }">
	<MvASSIGN NAME = "l.layout_component:disp_order"	VALUE = "{ int( l.layout_component:disp_order ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components
					      SET
							name = ?,
							parent = ?,
							active = ?,
							disp_order = ?,
							dt_start = ?,
							dt_end = ?,
							code = ?
					      WHERE
						    id		= ?' }"
			 FIELDS	= "l.layout_component:name, l.layout_component:parent, l.layout_component:active, l.layout_component:disp_order, l.layout_component:dt_start, l.layout_component:dt_end, l.layout_component:code, l.layout_component:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCOMPONENTS-0006', 'Could not update layout component.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Update" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component:name" VALUE = "{ trim( l.layout_component:name ) }">
	<MvASSIGN NAME = "l.layout_component:code" VALUE = "{ trim( l.layout_component:code ) }">

	<MvIF EXPR = "{ ISNULL l.layout_component:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.layout_component:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Validation_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ LayoutComponent_Update_Lowlevel( l.layout_component ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Delete" PARAMETERS = "layout_component_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components WHERE id = ?' }"
			 FIELDS	= "l.layout_component_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Could not delete layout component.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0007', 'Could not delete layout component.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutComponent_Delete_Values( l.layout_component_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Delete_Values" PARAMETERS = "layout_component_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT LayoutValueReferencesDelete_Component( l.layout_component_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Values WHERE layouts_components_id = ?' }"
			 FIELDS	= "l.layout_component_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Could not delete values of layout component.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0007', 'Could not delete values of layout component.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Delete_Components" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components WHERE layout_id = ?' }"
				FIELDS	= "l.layout_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-LAYOUT-1000', 'Could not load components for layout.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGLayouts_Components.d.EOF }">
		<MvIF EXPR = "{ NOT LayoutComponent_Delete( TGLayouts_Components.d.id  ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts_Components" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
	<MvFUNCTIONRETURN VALUE = 1>
</MVFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Load_Code" PARAMETERS = "layout_id, code, layout_component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components WHERE layout_id = ? AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.layout_id, l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-LAYOUT-1000', 'Could not load component for layout.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Components.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvEVAL EXPR = "{ Read_Layout_Component( l.layout_component ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Read" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_value:layouts_components_id"	VALUE = "{ TGLayouts_Values.d.layouts_components_id  }">
	<MvASSIGN NAME = "l.layout_value:attr_id"				VALUE = "{ TGLayouts_Values.d.attr_id }">
	<MvASSIGN NAME = "l.layout_value:value"					VALUE = "{ TGLayouts_Values.d.value }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Insert_Lowlevel" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayouts_Values
						  ( layouts_components_id, attr_id, value )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.layout_value:layouts_components_id, l.layout_value:attr_id, l.layout_value:value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTVALUES-0001', 'Could not insert value for layout component.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutValueReferencesInsert( l.layout_value:layouts_components_id, l.layout_value:attr_id, l.layout_value:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ LayoutComponent_Load_ID( l.layout_value:layouts_components_id, l.layout_component ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Delete( l.layout_component:layout_id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Insert" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.layout_value:layouts_components_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout Component ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layouts_components_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.layout_value:attr_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutComponent_Load_ID( l.layout_value:layouts_components_id, l.layout )}">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layout_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.layout_value:attr_id, l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ LayoutValue_Load( l.layout_value:layouts_components_id, l.layout_value:attr_id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ LayoutValue_Update( l.layout_value ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutValue_Insert_Lowlevel( l.layout_value ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.Error_Message }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Load" PARAMETERS = "layouts_components_id, attr_id, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Values"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Values WHERE layouts_components_id = ? AND attr_id = ?' }"
				FIELDS	= "l.layouts_components_id, l.attr_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTVALUES-0004', 'Could not load value for layout component attribute' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Values.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Values">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-LAYOUTVALUES-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ LayoutValue_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Values">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Load_Value" PARAMETERS = "layouts_components_id, attr_id, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT LayoutValue_Load( l.layouts_components_id, l.attr_id, l.loaded_value ) }">
		<MvASSIGN NAME = "l.output"	VALUE = "">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.output"	VALUE = "{ l.loaded_value:value }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Update_Lowlevel" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT LayoutValueReferencesUpdate( l.layout_value:layouts_components_id, l.layout_value:attr_id, l.layout_value:value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGLayouts_Values
					      SET
							value = ?
					      WHERE
						    layouts_components_id = ? AND
						    attr_id = ?' }"
			 FIELDS	= "l.layout_value:value, l.layout_value:layouts_components_id, l.layout_value:attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTVALUES-0006', 'Could not update values for layout component.' ) }">
	</MvIF>

	<MvIF EXPR = "{ LayoutComponent_Load_ID( l.layout_value:layouts_components_id, l.layout_component ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Delete( l.layout_component:layout_id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Update" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.layout_value:layouts_components_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout Component ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layouts_components_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.layout_value:attr_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutComponent_Load_ID( l.layout_value:layouts_components_id, l.layout ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layouts_components_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.layout_value:attr_id, l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">

		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutValue_Load( l.layout_value:layouts_components_id, l.layout_value:attr_id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ LayoutValue_Insert_Lowlevel( l.layout_value ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ LayoutValue_Update_Lowlevel( l.layout_value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Delete" PARAMETERS = "layout_value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT LayoutValueReferencesDelete( l.layout_value:layouts_components_id, l.layout_value:attr_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Values WHERE layouts_components_id = ? AND attr_id = ?' }"
			 FIELDS	= "l.layout_value:layouts_components_id, l.layout_value:attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Could not delete value for layout.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0007', 'Could not delete value for layout.' ) }">
	</MvIF>

	<MvIF EXPR = "{ LayoutComponent_Load_ID( l.layout_value:layouts_components_id, l.layout_component ) }">
		<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Delete( l.layout_component:layout_id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Load_All" PARAMETERS = "layouts_components_id, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Values"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Values WHERE layouts_components_id = ?' }"
				FIELDS	= "l.layouts_components_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-LAYOUT-1000', 'Could not load values for layout.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGLayouts_Values.d.EOF }">
		<MvEVAL EXPR = "{ LayoutValue_Read( l.output[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts_Values" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Values">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Save" PARAMETERS = "layout_id, layout_nodes var, deleted_components var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Layout_Components_Save_Lowlevel( l.layout_id, l.layout_nodes ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Components_Delete_Lowlevel( l.layout_id, l.deleted_components ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Recache( l.layout_id ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Save_Lowlevel" PARAMETERS = "layout_id, layout_nodes var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Recursive Function that will update the layout components.
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.node" ARRAY = "l.layout_nodes:nodes">
		<MvASSIGN NAME = "l.disp_order"			VALUE = "{ l.disp_order + 1 }">
		<MvASSIGN NAME = "l.node:layout_id"		VALUE = "{ l.layout_id }">
		<MvASSIGN NAME = "l.node:parent"		VALUE = "{ l.layout_nodes:id }">
		<MvASSIGN NAME = "l.node:component_id"	VALUE = "{ l.node:component:id }">
		<MvASSIGN NAME = "l.node:disp_order"	VALUE = "{ l.disp_order }">

		<MvIF EXPR = "{ ( l.node:id EQ 0 ) OR ( ISNULL l.node:id )  }">
			<MvIF EXPR = "{ NOT LayoutComponent_Insert( l.node ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT LayoutComponent_Update( l.node ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT Layout_Components_Save_Attributes( l.node ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT Layout_Components_Save_Lowlevel( l.layout_id, l.node ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Delete_Lowlevel" PARAMETERS = "layout_id, deleted_nodes var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.node" ARRAY = "l.deleted_nodes:nodes">
		<MvIF EXPR = "{ ( l.node:id EQ 0 ) OR ( ISNULL l.node:id ) }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ NOT LayoutComponent_Delete( l.node:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Save_Attributes" PARAMETERS = "node var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.node:component:attributes">
		<MvASSIGN NAME = "l.new_attribute"							VALUE = "">
		<MvASSIGN NAME = "l.new_attribute:layouts_components_id"	VALUE = "{ l.node:id }">
		<MvASSIGN NAME = "l.new_attribute:attr_id"					VALUE = "{ l.attribute:id }">
		<MvASSIGN NAME = "l.new_attribute:value"					VALUE = "{ l.attribute:value }">

		<MvIF EXPR = "{ l.attribute:type EQ 'link' }">
			<MvASSIGN NAME = "l.new_attribute:value" VALUE = "{ miva_array_serialize( l.attribute:link ) }">
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'product' }">
			<MvASSIGN NAME = "l.attribute:product:id" VALUE = 0>

			<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_Code( l.attribute:product:code, l.loaded_product ) }">
				<MvASSIGN NAME = "l.attribute:product:id" VALUE = "{ l.loaded_product:id }">
				<MvASSIGN NAME = "l.attribute:product:code" VALUE = "{ l.loaded_product:code }">
			</MvIF>

			<MvASSIGN NAME = "l.new_attribute:value" VALUE = "{ miva_array_serialize( l.attribute:product ) }">
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'category' }">
			<MvASSIGN NAME = "l.attribute:category:id" VALUE = 0>

			<MvIF EXPR = "{ [ g.Module_Library_DB ].Category_Load_Code( l.attribute:category:code, l.loaded_category ) }">
				<MvASSIGN NAME = "l.attribute:category:id" VALUE = "{ l.loaded_category:id }">
				<MvASSIGN NAME = "l.attribute:category:code" VALUE = "{ l.loaded_category:code }">
			</MvIF>

			<MvASSIGN NAME = "l.new_attribute:value" VALUE = "{ miva_array_serialize( l.attribute:category ) }">
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'multitext' }">
			<MvASSIGN NAME = "l.new_attribute:value" VALUE = "{ glosub( l.attribute:value, asciichar( 10 ), '|' ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT LayoutValue_Update( l.new_attribute ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Recursive_Nes_Attack" PARAMETERS = "layout_id, parent_id, components var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.component" ARRAY = "l.components" COUNT = "{ Layout_Components_Load_Parent_Lowlevel( l.layout_id, l.parent_id, l.components, l.count ) }">
		<MvIF EXPR = "{ l.component:component:allow_children EQ 1 }">
			<MvASSIGN NAME = "l.component:node_count" VALUE = "{ Recursive_Nes_Attack( l.component:layout_id, l.component:id, l.component:nodes ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Load_Parent_Lowlevel" PARAMETERS = "layout_id, parent_id, components var, count var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components WHERE layout_id = ? AND parent = ? ORDER BY disp_order' }"
				FIELDS	= "l.layout_id, l.parent_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-LAYOUT-1000', 'Could not load layout components for parent component.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGLayouts_Components.d.EOF }">
		<MvEVAL EXPR = "{ Read_Layout_Component( l.components[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts_Components" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'TGCOMPONENT-LAYOUT-2000', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Layout_Component" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component:id"			VALUE = "{ TGLayouts_Components.d.id }">
	<MvASSIGN NAME = "l.component:component_id"	VALUE = "{ TGLayouts_Components.d.component_id }">
	<MvASSIGN NAME = "l.component:layout_id"	VALUE = "{ TGLayouts_Components.d.layout_id }">
	<MvASSIGN NAME = "l.component:name"			VALUE = "{ TGLayouts_Components.d.name }">
	<MvASSIGN NAME = "l.component:parent"		VALUE = "{ TGLayouts_Components.d.parent }">
	<MvASSIGN NAME = "l.component:active"		VALUE = "{ TGLayouts_Components.d.active }">
	<MvASSIGN NAME = "l.component:disp_order"	VALUE = "{ TGLayouts_Components.d.disp_order  }">
	<MvASSIGN NAME = "l.component:dt_start"		VALUE = "{ TGLayouts_Components.d.dt_start  }">
	<MvASSIGN NAME = "l.component:dt_end"		VALUE = "{ TGLayouts_Components.d.dt_end  }">
	<MvASSIGN NAME = "l.component:code"			VALUE = "{ TGLayouts_Components.d.code  }">

	<MvASSIGN NAME = "l.null" VALUE = "{ Component_Load_ID( l.component:component_id, l.component:component ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ Components_Attrs_Load_All_ID( l.component:component_id, l.component:component:attributes ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ LayoutComponent_Load_Values( l.component:id, l.component:component:attributes ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Components_Attrs_Load_All_ID" PARAMETERS = "component_id, return var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Attrs"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE component_id = ? ORDER BY disp_order' }"
				FIELDS	= "l.component_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0002', 'Could not load attributes for component.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponent_Attrs.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTS-0003' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGComponent_Attrs.d.EOF }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ l.count + 1 }">
		<MvASSIGN NAME = "l.null"	VALUE = "{ ComponentAttrs_Read( l.return[ l.count ] ) }">

		<MvIF EXPR = "{ l.return[ l.count ]:type EQ 'select' OR l.return[ l.count ]:type EQ 'radio' }">
			<MvASSIGN NAME ="l.null" VALUE = "{ Components_Options_Load_Attr( l.return[ l.count ]:id, l.return[ l.count ]:options ) }">
		</MvIF>

		<MvIF EXPR = "{ l.return[ l.count ]:type EQ 'imagetype' }">
			<MvIF EXPR = "{ ISNULL g.Session:cache:tgcomponents:imagetypes }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].ImageTypeList_Load_All( g.Session:cache:tgcomponents:imagetypes )  }">
			</MvIF>

			<MvASSIGN NAME = "l.return" INDEX = "{ l.count }" MEMBER = "options" VALUE = "{ g.Session:cache:tgcomponents:imagetypes }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "TGComponent_Attrs" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Components_Options_Load_Attr" PARAMETERS = "attr_id, return var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Options"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Options WHERE attr_id = ? ORDER BY disp_order' }"
				FIELDS	= "l.attr_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0002', 'Could not load options for attribute.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponent_Options.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTS-0003' ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT TGComponent_Options.d.EOF }">
		<MvASSIGN NAME ="l.null" VALUE = "{ ComponentOption_Read( l.return[ ++l.count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "TGComponent_Options" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Load_Values" PARAMETERS = "layout_component_id, attributes var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes">
		<MvASSIGN NAME = "l.null" VALUE = "{ LayoutValue_Load_Value( l.layout_component_id, l.attribute:id, l.attribute:value ) }">

		<MvIF EXPR = "{ l.attribute:type EQ 'link' }">
			<MvASSIGN NAME = "l.attribute:link" VALUE = "{ miva_array_deserialize( l.attribute:value ) }">

			<MvIF EXPR = "{ ISNULL l.attribute:link:type }">		<MvASSIGN NAME = "l.attribute:link:type" VALUE = "">		</MvIF>
			<MvIF EXPR = "{ ISNULL l.attribute:link:value }">		<MvASSIGN NAME = "l.attribute:link:value" VALUE = "">		</MvIF>
			<MvIF EXPR = "{ ISNULL l.attribute:link:targ }">		<MvASSIGN NAME = "l.attribute:link:targ" VALUE = "">		</MvIF>
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'product' }">
			<MvASSIGN NAME = "l.attribute:product" VALUE = "{ miva_array_deserialize( l.attribute:value ) }">

			<MvIF EXPR = "{ ISNULL l.attribute:product:id }">		<MvASSIGN NAME = "l.attribute:product:id" VALUE = "">		</MvIF>
			<MvIF EXPR = "{ ISNULL l.attribute:product:code }">		<MvASSIGN NAME = "l.attribute:product:code" VALUE = "">		</MvIF>
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'category' }">
			<MvASSIGN NAME = "l.attribute:category" VALUE = "{ miva_array_deserialize( l.attribute:value ) }">

			<MvIF EXPR = "{ ISNULL l.attribute:category:id }">		<MvASSIGN NAME = "l.attribute:category:id" VALUE = "">		</MvIF>
			<MvIF EXPR = "{ ISNULL l.attribute:category:code }">	<MvASSIGN NAME = "l.attribute:category:code" VALUE = "">	</MvIF>
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'multitext' }">
			<MvASSIGN NAME = "l.null" VALUE = "{ miva_splitstring( l.attribute:value, '|', l.attribute:value, 'trim' ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Load_Components" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "html, text, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.components_count" VALUE = "{ Recursive_Nes_Attack( g.Layout_ID, 0, l.components ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Output( l.components ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Runtime_Load_Layout" PARAMETERS = "layout_code, output var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.output" VALUE = "">

	<MvIF EXPR = "{ NOT Layout_Load_Code( l.layout_code, l.layout ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Layout_Cache_Load( l.layout:id, l.output ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Runtime_Load_Layout_Components" PARAMETERS = "layout_id, parent_id, components var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.component" ARRAY = "l.components" COUNT = "{ Runtime_Layout_Components_Load_Parent_Lowlevel( l.layout_id, l.parent_id, l.components, l.count ) }">
		<MvIF EXPR = "{ l.component:component:allow_children EQ 1 }">
			<MvASSIGN NAME = "l.component:children_count" VALUE = "{ Runtime_Load_Layout_Components( l.component:layout_id, l.component:id, l.component:children ) }">
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Runtime_Layout_Components_Load_Parent_Lowlevel" PARAMETERS = "layout_id, parent_id, components var, count var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components WHERE layout_id = ? AND parent = ? AND active = 1 ORDER BY disp_order' }"
				FIELDS	= "l.layout_id, l.parent_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-LAYOUT-1000', 'Could not load components for parent (runtime).' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGLayouts_Components.d.EOF }">
		<MvIF EXPR = "{ Determine_Active_Schedule( TGLayouts_Components.d.dt_start, TGLayouts_Components.d.dt_end ) }">
			<MvEVAL EXPR = "{ Runtime_Read_Layout_Component( l.components[ ++l.count ] ) }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts_Components" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'TGCOMPONENT-LAYOUT-2000', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Runtime_Read_Layout_Component" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component:id"			VALUE = "{ TGLayouts_Components.d.id }">
	<MvASSIGN NAME = "l.component:component_id"	VALUE = "{ TGLayouts_Components.d.component_id }">
	<MvASSIGN NAME = "l.component:layout_id"	VALUE = "{ TGLayouts_Components.d.layout_id }">
	<MvASSIGN NAME = "l.component:name"			VALUE = "{ TGLayouts_Components.d.name }">
	<MvASSIGN NAME = "l.component:parent"		VALUE = "{ TGLayouts_Components.d.parent }">
	<MvASSIGN NAME = "l.component:active"		VALUE = "{ TGLayouts_Components.d.active }">
	<MvASSIGN NAME = "l.component:disp_order"	VALUE = "{ TGLayouts_Components.d.disp_order  }">
	<MvASSIGN NAME = "l.component:code"			VALUE = "{ TGLayouts_Components.d.code  }">

	<MvASSIGN NAME = "l.null" VALUE = "{ Component_Load_ID( l.component:component_id, l.component:component ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ Runtime_Load_Values( l.component, l.component:attributes ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Runtime_Load_Values" PARAMETERS = "component var, output var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.null" VALUE = "{ Components_Attrs_Load_All_ID( l.component:component_id, l.attributes ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ LayoutComponent_Load_Values( l.component:id, l.attributes ) }">

	<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes">
		<MvASSIGN NAME = "{ 'l.output:' $ l.attribute:code $ ':value' }" VALUE = "{ l.attribute:value }">
		<MvIF EXPR = "{ l.attribute:type EQ 'product' }">
			<MvASSIGN NAME = "{ 'l.output:' $ l.attribute:code $ ':product' }" VALUE = "{ l.attribute:product }">
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'category' }">
			<MvASSIGN NAME = "{ 'l.output:' $ l.attribute:code $ ':category' }" VALUE = "{ l.attribute:category }">
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'link' }">
			<MvASSIGN NAME = "{ 'l.output:' $ l.attribute:code $ ':value' }" VALUE = "{ Load_URI( l.attribute:link ) }">
			<MvASSIGN NAME = "{ 'l.output:' $ l.attribute:code $ ':link' }" VALUE = "{ l.attribute:link }">
		</MvIF>
	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Determine_Active_Schedule" PARAMETERS = "dt_start, dt_end" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.dt_start GT 0 ) AND ( l.dt_start GT s.dyn_time_t ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	<MvIF EXPR = "{ ( l.dt_end GT 0 ) AND ( l.dt_end LE s.dyn_time_t ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Load_URI" PARAMETERS = "link var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.flags:nosession" VALUE = 1>

	<MvIF EXPR = "{ l.link:type EQ 'P' AND l.link:value }">		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_URI_UT ].Store_Product_Code_URL( l.link:value, l.flags ) }">
	<MvELSEIF EXPR = "{ l.link:type EQ 'C' AND l.link:value }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_URI_UT ].Store_Category_Code_URL( l.link:value, l.flags ) }">
	<MvELSEIF EXPR = "{ l.link:type EQ 'G' AND l.link:value }">	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_URI_UT ].Store_Page_Code_URL( l.link:value, l.flags ) }">
	<MvELSEIF EXPR = "{ l.link:type EQ 'U' AND l.link:value }">	<MvFUNCTIONRETURN VALUE = "{ l.link:value }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvCOMMENT>
|
|	Function Deticated to Ann
|
</MvCOMMENT>

<MvFUNCTION NAME = "Layout_Components_Duplicate" PARAMETERS = "new_layout_id, old_layout_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_count" VALUE = "{ Recursive_Nes_Attack( l.old_layout_id, 0, l.layout_nodes:nodes ) }">
	<MvFUNCTIONRETURN VALUE = "{ Layout_Components_Duplicate_Lowlevel( l.new_layout_id, l.layout_nodes ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Duplicate_Lowlevel" PARAMETERS = "layout_id, layout_nodes var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Recursive Function that will duplicate the layout components.
	|
	</MvCOMMENT>
	<MvFOREACH ITERATOR = "l.node" ARRAY = "l.layout_nodes:nodes">
		<MvASSIGN NAME = "l.disp_order"			VALUE = "{ l.disp_order + 1 }">
		<MvASSIGN NAME = "l.node:id"			VALUE = 0>
		<MvASSIGN NAME = "l.node:layout_id"		VALUE = "{ l.layout_id }">
		<MvASSIGN NAME = "l.node:parent"		VALUE = "{ l.layout_nodes:id }">
		<MvASSIGN NAME = "l.node:component_id"	VALUE = "{ l.node:component:id }">
		<MvASSIGN NAME = "l.node:disp_order"	VALUE = "{ l.disp_order }">

		<MvIF EXPR = "{ NOT LayoutComponent_Insert( l.node ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT Layout_Components_Save_Attributes( l.node ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT Layout_Components_Duplicate_Lowlevel( l.layout_id, l.node ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Duplicate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.layout:code" VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Code ) }">
	<MvASSIGN NAME = "l.layout:name" VALUE = "{ [ g.Module_JSON ].JSON_Decode( g.Name ) }">

	<MvIF EXPR = "{ NOT Layout_Insert( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Components_Duplicate( l.layout:id, g.Layout_ID ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Save" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "html, text, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "l.null"		VALUE = "{ miva_json_decode( g.Payload, l.payload ) }">

	<MvIF EXPR = "{ NOT Layout_Components_Save( g.Layout_ID, l.payload:layout, l.payload:deleted ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Components_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ int( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGComponents', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,code:s.code,name:s.name,descrip:s.descrip,image:s.image,allow_children:s.allow_children,disp_order:s.disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,code:s.code,name:s.name,descrip:s.descrip,image:s.image,allow_children:s.allow_children,disp_order:s.disp_order', 's.disp_order' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGComponents', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGPOINTS-JSON-1000', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT TGComponents.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( TGComponents.d.id ) }">,
					"code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGComponents.d.code ) }">",
					"name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGComponents.d.name ) }">",
					"descrip" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGComponents.d.descrip ) }">",
					"image" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGComponents.d.image ) }">",
					"allow_children" : <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( TGComponents.d.allow_children ) }">,
					"disp_order": <MvEVAL EXPR = "{ int( TGComponents.d.disp_order ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "TGComponents" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layouts_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ int( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGLayouts', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,code:s.code,name:s.name' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,code:s.code,name:s.name', 's.id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGLayouts', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGPOINTS-JSON-2000', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT TGLayouts.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( TGLayouts.d.id ) }">,
					"code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGLayouts.d.code ) }">",
					"name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGLayouts.d.name ) }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "TGLayouts" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Component_Attrs_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ int( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'attr.id				AS attr_id,
																				 attr.component_id			AS attr_component_id,
																				 attr.code				AS attr_code,
																				 attr.prompt			AS attr_prompt,
																				 attr.type				AS attr_type,
																				 attr.required			AS attr_required,
																				 attr.disp_order		AS attr_disp_order,
																				 opt.id					AS opt_id,
																				 opt.attr_id			AS opt_attr_id,
																				 opt.prompt				AS opt_prompt,
																				 opt.disp_order			AS opt_disp_order' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGComponent_Attrs', 'attr' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'attr', g.Store_Table_Prefix $ 'TGComponent_Options', 'opt', 'opt.attr_id = attr.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'attr.component_id = ?', 'g.Component_ID' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'code:attr.code,prompt:attr.prompt;opt.prompt,type:attr.type,required:attr.required' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, g.Sort,
																		'code:attr.code,
																		prompt:attr.prompt;opt.prompt,
																		type:attr.type,
																		required:attr.required',
																		'attr.disp_order;opt.disp_order' ) }">
																			
	<MvASSIGN NAME = "l.search_sql"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Attrs"
				QUERY	= "{ l.search_sql }"
				FIELDS	= "{ l.search_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGCOMPONENTS-JSON-3000', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total_count"	VALUE = 0>
	<MvASSIGN NAME = "l.attr_count"		VALUE = 0>
	<MvASSIGN NAME = "l.opt_count"		VALUE = 0>
	<MvASSIGN NAME = "l.last_attr_id"	VALUE = 0>
	<MvASSIGN NAME = "l.last_opt_id"	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"data":
		[
		<MvWHILE EXPR = "{ NOT TGComponent_Attrs.d.EOF }">
			<MvIF EXPR = "{ l.last_attr_id NE TGComponent_Attrs.d.attr_id }">
				<MvIF EXPR = "{ l.opt_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					]
				</MvIF>

				<MvIF EXPR = "{ l.attr_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.attr_count ) }">
				"id":			<MvEVAL EXPR = "{ int( TGComponent_Attrs.d.attr_id ) }">,
				"component_id":	<MvEVAL EXPR = "{ int( TGComponent_Attrs.d.attr_component_id ) }">,
				"code":			"<MvEVAL EXPR = "{ encodejavascriptstring( TGComponent_Attrs.d.attr_code ) }">",
				"prompt":		"<MvEVAL EXPR = "{ encodejavascriptstring( TGComponent_Attrs.d.attr_prompt ) }">",
				"type":			"<MvEVAL EXPR = "{ encodejavascriptstring( TGComponent_Attrs.d.attr_type ) }">",
				"required":		<MvEVAL EXPR = "{ int( TGComponent_Attrs.d.attr_required ) }">,
				"disp_order":	<MvEVAL EXPR = "{ int( TGComponent_Attrs.d.attr_disp_order ) }">

				<MvASSIGN NAME = "l.total_count"	VALUE = "{ l.total_count + 1 }">
				<MvASSIGN NAME = "l.last_attr_id"	VALUE = "{ TGComponent_Attrs.d.attr_id }">
				<MvASSIGN NAME = "l.last_opt_id"	VALUE = 0>
				<MvASSIGN NAME = "l.opt_count"		VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ l.last_opt_id NE TGComponent_Attrs.d.opt_id AND NOT ISNULL TGComponent_Attrs.d.opt_id }">
				<MvIF EXPR = "{ l.opt_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>

				<MvIF EXPR = "{ NOT l.opt_count }">
					, "options":
					[
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.opt_count ) }">
				"id":			<MvEVAL EXPR = "{ int( TGComponent_Attrs.d.opt_id ) }">,
				"attr_id":		<MvEVAL EXPR = "{ int( TGComponent_Attrs.d.opt_attr_id ) }">,
				"prompt":		"<MvEVAL EXPR = "{ encodejavascriptstring( TGComponent_Attrs.d.opt_prompt ) }">",
				"disp_order":	<MvEVAL EXPR = "{ int( TGComponent_Attrs.d.opt_disp_order ) }">

				<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">
				<MvASSIGN NAME = "l.last_opt_id"	VALUE = "{ TGComponent_Attrs.d.opt_id }">
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "TGComponent_Attrs" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

		<MvIF EXPR = "{ l.opt_count }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			]
		</MvIF>

		<MvIF EXPR = "{ l.attr_count }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvIF>
		],
		"start_offset": 0,
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">
	}
}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Components_Load_All" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "html, text, compresswhitespace">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ Components_Load_All( l.components ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Output( l.components ) }">
	</MvIF>
	[]
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Delete_Layout_Cache" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Cache_DeleteAll() }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValueReferencesInsert" PARAMETERS = "layout_component_id, attr_id, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.attr_id, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.attribute:type NE 'image' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Library_DB ].Image_Load_File( l.value, l.image ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Image_Increment_RefCount( l.image:id ) }">
	<MvELSEIF EXPR = "{ GeneratedImage_Load_File( l.value, l.image ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Image_Increment_RefCount( l.image:image_id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValueReferencesUpdate" PARAMETERS = "layout_component_id, attr_id, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.attr_id, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.attribute:type NE 'image' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutValue_Load_Value( l.layout_component_id, l.attr_id, l.prev_value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.prev_value NE l.value }">
		<MvIF EXPR = "{ [ g.Module_Library_DB ].Image_Load_File( l.prev_value, l.prev_image ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Image_Decrement_RefCount( l.prev_image:id ) }">
		<MvELSEIF EXPR = "{ GeneratedImage_Load_File( l.prev_value, l.prev_image ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Image_Decrement_RefCount( l.prev_image:image_id ) }">
		</MvIF>

		<MvIF EXPR = "{ [ g.Module_Library_DB ].Image_Load_File( l.value, l.image ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Image_Increment_RefCount( l.image:id ) }">
		<MvELSEIF EXPR = "{ GeneratedImage_Load_File( l.value, l.image ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].Image_Increment_RefCount( l.image:image_id ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValueReferencesDelete" PARAMETERS = "layout_component_id, attr_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.attr_id, l.attribute ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.attribute:type NE 'image' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutValue_Load_Value( l.layout_component_id, l.attr_id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Library_DB ].Image_Load_File( l.value, l.image ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Image_Decrement_RefCount( l.image:id ) }">
	<MvELSEIF EXPR = "{ GeneratedImage_Load_File( l.value, l.image ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Image_Decrement_RefCount( l.image:image_id ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValueReferencesDelete_Component" PARAMETERS = "layout_component_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT LayoutValue_Load_All( l.layout_component_id, l.values ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.value" ARRAY = "l.values">
		<MvASSIGN NAME = "l.null" VALUE = "{ LayoutValueReferencesDelete( l.layout_component_id, l.value:attr_id ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "GeneratedImage_Load_File" PARAMETERS = "file, generatedimage var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "GeneratedImages"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'GeneratedImages WHERE image = ?' }"
				FIELDS	= "l.file">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-IMAGE-1000', 'Could not load image.' ) }">
	</MvIF>

	<MvIF EXPR = "{ GeneratedImages.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "GeneratedImages">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'MER-DBP-GIM-00010' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].GeneratedImage_Read( l.generatedimage ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "GeneratedImages">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponentParent_Load_Name" PARAMETERS = "name, layout_id, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT Layouts_Components.* FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components Layouts_Components
								LEFT JOIN ' $ g.Store_Table_Prefix $ 'TGComponents Components
								ON Components.id = Layouts_Components.component_id
								WHERE Layouts_Components.layout_id = ? AND Layouts_Components.name = ? AND Components.allow_children = 1 LIMIT 1' }"
				FIELDS	= "l.layout_id, l.name">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCOMPONENTS-0007', 'Could not load Layout Component Parent.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Components.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-LAYOUTCOMPONENTS-0008' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ LayoutComponent_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponentParent_Load_Code" PARAMETERS = "code, layout_id, output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT Layouts_Components.* FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components Layouts_Components
								LEFT JOIN ' $ g.Store_Table_Prefix $ 'TGComponents Components
								ON Components.id = Layouts_Components.component_id
								WHERE Layouts_Components.layout_id = ? AND Layouts_Components.code = ? AND Components.allow_children = 1 LIMIT 1' }"
				FIELDS	= "l.layout_id, l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCOMPONENTS-0007', 'Could not load Layout Component Parent Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Components.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-LAYOUTCOMPONENTS-0008' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ LayoutComponent_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_DispOrder_Last" PARAMETERS = "layout_id, parent_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT disp_order FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components WHERE layout_id = ? AND parent = ? ORDER BY disp_order DESC LIMIT 1' }"
				FIELDS	= "l.layout_id, l.parent_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCOMPONENTS-0010', 'Could not load Display Order.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Components.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.return" VALUE = "{ TGLayouts_Components.d.disp_order + 1 }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">

	<MvFUNCTIONRETURN VALUE = "{ l.return }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Cache_Load" PARAMETERS = "layout_id, return var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Check if Layout Cache needs to be deleted first.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.null" VALUE = "{ Check_Layout_Cache_Layout( l.layout_id ) }">

	<MvIF EXPR = "{ NOT Layout_Cache_Load_Lowlevel( l.layout_id, l.return ) }">
		<MvFUNCTIONRETURN VALUE = "{ Layout_Cache_Save( l.layout_id, l.return ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Cache_Load_Lowlevel" PARAMETERS = "layout_id, return var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Cache"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache WHERE layout_id = ?' }"
				FIELDS	= "l.layout_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCACHE-0001', 'Could not load Display Order.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Cache.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Cache">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-LAYOUTCACHE-0002' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.return" VALUE = "{ miva_array_deserialize( TGLayouts_Cache.d.value ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Cache">

	<MvIF EXPR = "{ NOT l.return }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Cache_Save" PARAMETERS = "layout_id, return var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Runtime_Load_Layout_Components( l.layout_id, 0, l.return ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Layout_Cache_Save_Lowlevel( l.layout_id, l.return ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Cache_Save_Lowlevel" PARAMETERS = "layout_id, value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_values" VALUE = "{ miva_array_serialize( l.value ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache
						  ( layout_id, value, dt_cached )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.layout_id, l.layout_values, s.dyn_time_t">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCACHE-0003', 'Could not save Layout Cache.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Cache_Delete" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache WHERE layout_id = ?' }"
			 FIELDS	= "l.layout_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCACHE-0004', 'Could not delete layout cache.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Cache_Recache" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Layout_Cache_Delete( l.layout_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Layout_Cache_Save( l.layout_id, l.null ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Cache_DeleteAll" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCACHE-0005', 'Could not all layout cache.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Check_Layout_Cache" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Cache"
				QUERY	= "{
								'SELECT
									layoutcache.layout_id
								FROM
									' $ g.Store_Table_Prefix $ 'TGLayouts_Cache layoutcache
								JOIN
									' $ g.Store_Table_Prefix $ 'TGLayouts_Components layoutcomponents
								ON
									layoutcache.layout_id = layoutcomponents.layout_id
								WHERE
									( 
										layoutcomponents.dt_start> 0 AND
										layoutcomponents.dt_start < ? AND
										layoutcomponents.dt_start> layoutcache.dt_cached
									)
									OR
									(
										layoutcomponents.dt_end> 0 AND
										layoutcomponents.dt_end < ? AND
										layoutcomponents.dt_end> layoutcache.dt_cached
									)'
							}"
				FIELDS	= "s.dyn_time_t, s.dyn_time_t">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCACHE-0006', 'Could not Load Layouts.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Cache.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Cache">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvWHILE EXPR = "{ NOT TGLayouts_Cache.d.EOF }">
		<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Delete( TGLayouts_Cache.d.layout_id ) }">
		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts_Cache" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Cache">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Check_Layout_Cache_Layout" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Cache"
				QUERY	= "{
								'SELECT
									layoutcache.layout_id
								FROM
									' $ g.Store_Table_Prefix $ 'TGLayouts_Cache layoutcache
								JOIN
									' $ g.Store_Table_Prefix $ 'TGLayouts_Components layoutcomponents
								ON
									layoutcache.layout_id = layoutcomponents.layout_id
								WHERE
									layoutcomponents.layout_id = ? AND
									( 
										layoutcomponents.dt_start> 0 AND
										layoutcomponents.dt_start < ? AND
										layoutcomponents.dt_start> layoutcache.dt_cached
									)
									OR
									(
										layoutcomponents.dt_end> 0 AND
										layoutcomponents.dt_end < ? AND
										layoutcomponents.dt_end> layoutcache.dt_cached
									)'
							}"
				FIELDS	= "l.layout_id, s.dyn_time_t, s.dyn_time_t">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCACHE-0007', 'Could not Load Layout.' ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Cache.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Cache">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvWHILE EXPR = "{ NOT TGLayouts_Cache.d.EOF }">
		<MvASSIGN NAME = "l.null" VALUE = "{ Layout_Cache_Delete( TGLayouts_Cache.d.layout_id ) }">
		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts_Cache" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Cache">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	Export Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Export_Provisioning_Components" PARAMETERS = "output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ int( g.Exp_Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGComponents', 's' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, 'disp_order', 'disp_order', 'disp_order' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-EXPORT-0001', g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGComponents', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-EXPORT-0002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>
	<MvASSIGN NAME = "g.Total_Count" VALUE = "{ l.total_count }">

	<MvWHILE EXPR = "{ ( NOT TGComponents.d.EOF ) AND ( ( g.Exp_Count EQ 0 ) OR ( l.count LT g.Exp_Count ) ) }">
		<MvASSIGN NAME = "g.Offset"	VALUE = "{ g.Offset + 1 }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ l.count + 1 }">

		<MvEVAL EXPR = "{ Export_Component( l.output ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Update( g.Offset, g.Total_Count ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGComponents" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

	<MvASSIGN NAME = "g.Export_Continue" VALUE = 1>

	<MvIF EXPR = "{ g.Offset GE g.Total_Count }">
		<MvASSIGN NAME = "g.Export_Continue" VALUE = 0>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Export_Component" PARAMETERS = "output var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ Component_Read( l.component ) }">

	<MvASSIGN NAME = "l.tab" VALUE = "{ asciichar( 09 ) }">

	<MvCAPTURE VARIABLE = "l.output">
		<MIVA STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<MvEVAL EXPR = "{ asciichar( 10 ) }">
		<MvEVAL EXPR = "{ l.tab $ '<Component_Add>' }">
			<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Code>' $ l.component:code $ '</Code>' }">
			<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Name>' $ miva_cdata_encode( l.component:name ) $ '</Name>' }">
			<MvIF EXPR = "{ l.component:descrip }">
				<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Descrip>' $ miva_cdata_encode( l.component:descrip ) $ '</Descrip>' }">
			</MvIF>
			<MvIF EXPR = "{ l.component:image }">
				<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Image>' $ miva_cdata_encode( l.component:image ) $ '</Image>' }">
			</MvIF>
			<MvIF EXPR = "{ l.component:allow_children }">
				<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Allow_Nest>1</Allow_Nest>' }">
			<MvELSE>
				<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Allow_Nest>0</Allow_Nest>' }">
			</MvIF>
		<MvEVAL EXPR = "{ l.tab $ '</Component_Add>' }">
		<MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ Export_Component_Attributes( l.component ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Export_Component_Attributes" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ NOT Components_Attrs_Load_All_ID( l.component:id, l.component:attributes ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.tab" VALUE = "{ asciichar( 09 ) }">

	<MvCAPTURE VARIABLE = "l.attribute_output">
		<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.component:attributes">
			<MvEVAL EXPR = "{ asciichar( 10 ) }">
			<MvEVAL EXPR = "{ l.tab $ '<ComponentAttribute_Add component="' $ l.component:code $ '">' }">
				<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Code>' $ l.attribute:code $ '</Code>' }">
				<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Prompt>' $ miva_cdata_encode( l.attribute:prompt ) $ '</Prompt>' }">
				<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Type>' $ l.attribute:type $ '</Type>' }">
				<MvIF EXPR = "{ l.attribute:required }">
					<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Required>1</Required>' }">
				<MvELSE>
					<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Required>0</Required>' }">
				</MvIF>
			<MvEVAL EXPR = "{ l.tab $ '</ComponentAttribute_Add>' }">
			<MvIF EXPR = "{ ( l.attribute:type EQ 'select' OR l.attribute:type EQ 'radio' ) AND l.attribute:options }">
				<MvFOREACH ITERATOR = "l.option" ARRAY = "l.attribute:options">
					<MvEVAL EXPR = "{ asciichar( 10 ) }">
					<MvEVAL EXPR = "{ l.tab $ '<ComponentAttributeOption_Add component="' $ l.component:code $ '" code="' $ l.attribute:code $ '">' }">
						<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Prompt>' $ miva_cdata_encode( l.option:prompt ) $ '</Prompt>' }">
					<MvEVAL EXPR = "{ l.tab $ '</ComponentAttributeOption_Add>' }">
				</MvFOREACH>
			</MvIF>
		</MvFOREACH>
	</MvCAPTURE>

	<MvFUNCTIONRETURN VALUE = "{ l.attribute_output }">
</MvFUNCTION>

<MvFUNCTION NAME = "Export_Provisioning_Layouts" PARAMETERS = "output var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ int( g.Exp_Count ) }">
	<MvASSIGN NAME = "g.LAYOUT_OPTION"	VALUE = "{ int( g.LAYOUT_OPTION ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGLayouts', 's' ) }">

	<MvIF EXPR = "{ g.LAYOUT_OPTION GT 0 }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 's.id = ?', 'g.LAYOUT_OPTION' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-EXPORT-0003', g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGLayouts', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-EXPORT-0004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count"			VALUE = 0>
	<MvASSIGN NAME = "g.Total_Count"	VALUE = "{ l.total_count }">

	<MvWHILE EXPR = "{ ( NOT TGLayouts.d.EOF ) AND ( ( g.Exp_Count EQ 0 ) OR ( l.count LT g.Exp_Count ) ) }">
		<MvASSIGN NAME = "g.Offset"	VALUE = "{ g.Offset + 1 }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ l.count + 1 }">

		<MvEVAL EXPR = "{ Export_Layout( l.output ) }">

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Update( g.Offset, g.Total_Count ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">

	<MvASSIGN NAME = "g.Export_Continue" VALUE = 1>

	<MvIF EXPR = "{ g.Offset GE g.Total_Count }">
		<MvASSIGN NAME = "g.Export_Continue" VALUE = 0>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Export_Layout" PARAMETERS = "output var" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ Layout_Read( l.layout ) }">

	<MvASSIGN NAME = "l.tab" VALUE = "{ asciichar( 09 ) }">

	<MvCAPTURE VARIABLE = "l.output">
		<MIVA STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
		<MvEVAL EXPR = "{ asciichar( 10 ) }">
		<MvEVAL EXPR = "{ l.tab $ '<Layout_Add>' }">
			<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Code>' $ l.layout:code $ '</Code>' }">
			<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Name>' $ miva_cdata_encode( l.layout:name ) $ '</Name>' }">
		<MvEVAL EXPR = "{ l.tab $ '</Layout_Add>' }">
		<MIVA STANDARDOUTPUTLEVEL = "">
	</MvCAPTURE>

	<MvEVAL EXPR = "{ Export_Layout_Components( l.layout, l.null_parent, l.components_output ) }">
	<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ l.components_output }">
</MvFUNCTION>

<MvFUNCTION NAME = "Export_Layout_Components" PARAMETERS = "layout var, parent var, output var"  STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.tab" VALUE = "{ asciichar( 09 ) }">

	<MvFOREACH ITERATOR = "l.component" ARRAY = "l.components" COUNT = "{ Layout_Components_Load_Parent_Lowlevel( l.layout:id, l.parent:id, l.components, l.count ) }">
		<MvCAPTURE VARIABLE = "l.new_output">
			<MIVA STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
			<MvEVAL EXPR = "{ asciichar( 10 ) }">
			<MvEVAL EXPR = "{ l.tab $ '<LayoutComponent_Add layout="' $ l.layout:code $ '" component="' $ l.component:component:code $ '">' }">
				<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Name>' $ miva_cdata_encode( l.component:name ) $ '</Name>' }">
				<MvEVAL EXPR = "{ l.tab  $ l.tab $ '<Code>' $ l.component:code $ '</Code>' }">
				<MvIF EXPR = "{ l.component:active }">
					<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Active>1</Active>' }">
				<MvELSE>
					<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Active>0</Active>' }">
				</MvIF>
				<MvIF EXPR = "{ l.parent:id GT 0 }">
					<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Parent>' $ miva_cdata_encode( l.parent:name ) $ '</Parent>' }">
					<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Parent_Code>' $ l.parent:code $ '</Parent_Code>' }">
				</MvIF>
				<MvIF EXPR = "{ l.component:dt_start GT 0 }">
					<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Date_Start>' $ miva_cdata_encode( [ g.Module_Library_Utilities ].Format_Date( l.component:dt_start, 'en-US' ) $ ' ' $ [ g.Module_Library_Utilities ].Format_Time_Short( l.component:dt_start, 'en-US' ) ) $ '</Date_Start>' }">
				</MvIF>
				<MvIF EXPR = "{ l.component:dt_end GT 0 }">
					<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Date_End>' $ miva_cdata_encode( [ g.Module_Library_Utilities ].Format_Date( l.component:dt_end, 'en-US' ) $ ' ' $ [ g.Module_Library_Utilities ].Format_Time_Short( l.component:dt_end, 'en-US' ) ) $ '</Date_End>' }">
				</MvIF>
				<MvIF EXPR = "{ miva_array_elements( l.component:component:attributes ) }">
					<MvEVAL EXPR = "{ l.tab $ l.tab $ '<Attributes>' }">
						<MvASSIGN NAME = "l.attr_pos" VALUE = 0>
						<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.component:component:attributes">
							<MvIF EXPR = "{ ISNULL l.attribute:value }">
								<MvFOREACHCONTINUE>
							<MvELSEIF EXPR = "{ l.attribute:type EQ 'product' AND ISNULL l.attribute:product:code }">
								<MvFOREACHCONTINUE>
							<MvELSEIF EXPR = "{ l.attribute:type EQ 'category' AND ISNULL l.attribute:category:code }">
								<MvFOREACHCONTINUE>
							</MvIF>
							<MvASSIGN NAME = "l.attr_pos" VALUE = "{ l.attr_pos + 1 }">
							<MvIF EXPR = "{ l.attr_pos GT 1 }">
								<MvEVAL EXPR = "{ asciichar( 10 ) }">
							</MvIF>
							<MvEVAL EXPR = "{ l.tab $ l.tab $ l.tab $ '<Attribute code="' $ l.attribute:code $ '">' }">
								<MvIF EXPR = "{ l.attribute:type EQ 'link' }">
									<MvEVAL EXPR = "{ l.tab $ l.tab $ l.tab $ l.tab $ '<LinkType>' $ Export_LinkType( l.attribute:link:type ) $ '</LinkType>' }">
									<MvIF EXPR = "{ l.attribute:link:value }">
										<MvEVAL EXPR = "{ l.tab $ l.tab $ l.tab $ l.tab $ '<Value>' $ l.attribute:link:value $ '</Value>' }">
									</MvIF>
								<MvELSEIF EXPR = "{ l.attribute:type EQ 'product' }">
									<MvEVAL EXPR = "{ l.tab $ l.tab $ l.tab $ l.tab $ '<Value>' $ l.attribute:product:code $ '</Value>' }">
								<MvELSEIF EXPR = "{ l.attribute:type EQ 'category' }">
									<MvEVAL EXPR = "{ l.tab $ l.tab $ l.tab $ l.tab $ '<Value>' $ l.attribute:category:code $ '</Value>' }">
								<MvELSEIF EXPR = "{ l.attribute:type EQ 'imagetype' }">
									<MvIF EXPR = "{ [ g.Module_Library_DB ].ImageType_Load_ID( l.attribute:value, l.imagetype ) }">
										<MvEVAL EXPR = "{ l.tab $ l.tab $ l.tab $ l.tab $ '<Value>' $ l.imagetype:code $ '</Value>' }">
									</MvIF>
								<MvELSEIF EXPR = "{ l.attribute:type EQ 'multitext' }">
									<MvEVAL EXPR = "{ l.tab $ l.tab $ l.tab $ l.tab $ '<Value>' $ miva_cdata_encode( miva_joinstring( l.attribute:value, '|', 'trim' ) ) $ '</Value>' }">
								<MvELSE>
									<MvEVAL EXPR = "{ l.tab $ l.tab $ l.tab $ l.tab $ '<Value>' $ miva_cdata_encode( l.attribute:value ) $ '</Value>' }">
								</MvIF>
							<MvEVAL EXPR = "{ l.tab $ l.tab $ l.tab $ '</Attribute>' }">
						</MvFOREACH>
					<MvEVAL EXPR = "{ l.tab $ l.tab $ '</Attributes>' }">
				</MvIF>
			<MvEVAL EXPR = "{ l.tab $ '</LayoutComponent_Add>' }">
			<MIVA STANDARDOUTPUTLEVEL = "">
		</MvCAPTURE>

		<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ l.new_output }">

		<MvIF EXPR = "{ l.component:component:allow_children EQ 1 }">
			<MvASSIGN NAME = "l.component:node_count" VALUE = "{ Export_Layout_Components( l.layout, l.component, l.output ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Export_LinkType" PARAMETERS = "link_type" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.link_type EQ 'N' }">		<MvFUNCTIONRETURN VALUE = "None">
	<MvELSEIF EXPR = "{ l.link_type EQ 'U' }">	<MvFUNCTIONRETURN VALUE = "URL">
	<MvELSEIF EXPR = "{ l.link_type EQ 'P' }">	<MvFUNCTIONRETURN VALUE = "Product">
	<MvELSEIF EXPR = "{ l.link_type EQ 'C' }">	<MvFUNCTIONRETURN VALUE = "Category">
	<MvELSEIF EXPR = "{ l.link_type EQ 'G' }">	<MvFUNCTIONRETURN VALUE = "Page">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
|	Provisioning Helper Functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Layout_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<Layout_Add>
			<Code>Your_Code_Here</Code>
			<Name>Your Name Here</Name>
		</Layout_Add>
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 'R', l.provide_xml, 'Code', l.layout:code )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Name', l.layout:name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Insert( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Layout_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<Layout_Update code="Your_Code_Here">
			<Code>Your_New_Code_Here</Code>
			<Name>Your New Name Here</Name>
		</Layout_Update>
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Load_Code( l.code, l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Layout with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 'O', l.provide_xml, 'Code', l.layout:code )	OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Name', l.layout:name ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Update( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Layout_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<Layout_Delete code="Your_Code_Here">
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Load_Code( l.code, l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Layout with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Delete( l.layout:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Component_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<Component_Add>
			<Code>Your_Code_Here</Code>
			<Name>Your Name Here</Name>
			<Descrip>Your Description</Descrip>
			<Image>graphics/00000001/leia.png</Image>
			<Allow_Nest>1</Allow_Nest>
		</Component_Add>
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 		'R', l.provide_xml, 'Code',			l.component:code )		OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'R', l.provide_xml, 'Name',			l.component:name )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml, 'Descrip',		l.component:descrip )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Image',		l.component:image )		OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'R', l.provide_xml, 'Allow_Nest',	l.component:allow_children ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Insert( l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Component_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<Component_Update code="My_Old_Code_Here">
			<Code>Your_Code_Here</Code>
			<Name>Your Name Here</Name>
			<Descrip>Your Description</Descrip>
			<Image>graphics/00000001/leia.png</Image>
			<Allow_Nest>1</Allow_Nest>
		</Component_Update>
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 		'O', l.provide_xml, 'Code',			l.component:code )		OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml, 'Name',			l.component:name )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml, 'Descrip',		l.component:descrip )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Image',		l.component:image )		OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml, 'Allow_Nest',	l.component:allow_children ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Update( l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Component_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<Component_Delete code="My_Code_Here">	
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Delete( l.component:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_ComponentAttribute_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<ComponentAttribute_Add component="My_Component">
			<Code>MyAttribute</Code>
			<Prompt>My Prompt</Prompt>
			<Type>image</Type>
			<Required>1</Required>
		</ComponentAttribute_Add>
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'component',	l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.componentattribute:component_id" VALUE = "{ l.component:id }">

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 		'R', l.provide_xml,	'Code',		l.componentattribute:code )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'R', l.provide_xml,	'Prompt',	l.componentattribute:prompt )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 		'R', l.provide_xml,	'Type',		l.componentattribute:type, 'text,radio,select,checkbox,memo,image,product,category,link,imagetype,datetime,multitext', 'text,radio,select,checkbox,memo,image,product,category,link,imagetype,datetime,multitext' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 	'R', l.provide_xml,	'Required',	l.componentattribute:required ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Insert( l.componentattribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_ComponentAttribute_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<ComponentAttribute_Update component="My_Component" code="Attribute_Code">
			<Code>MyAttribute</Code>
			<Prompt>My Prompt</Prompt>
			<Type>image</Type>
			<Required>1</Required>
		</ComponentAttribute_Update>	
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'component', l.component_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.component_code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.component_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_Code( l.component:id, l.code, l.componentattribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component Attribute with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 		'O', l.provide_xml,	'Code',		l.componentattribute:code )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml,	'Prompt',	l.componentattribute:prompt )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 		'O', l.provide_xml,	'Type',		l.componentattribute:type, 'text,radio,select,checkbox,memo,image,product,category,link,imagetype,datetime', 'text,radio,select,checkbox,memo,image,product,category,link,imagetype,datetime' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 	'O', l.provide_xml,	'Required',	l.componentattribute:required ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Update( l.componentattribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_ComponentAttribute_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<ComponentAttribute_Delete component="My_Component" code="Attribute_Code">
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'component', l.component_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.component_code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.component_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_Code( l.component:id, l.code, l.componentattribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component Attribute with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Delete( l.componentattribute:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_ComponentAttributeOption_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<ComponentAttributeOption_Add component="My_Component" code="Attribute_Code">
			<Prompt>My Prompt</Prompt>
		</ComponentAttributeOption_Add>	
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'component', l.component_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.component_code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.component_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_Code( l.component:id, l.code, l.componentattribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component Attribute with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Prompt', l.componentattributeoption:prompt ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.componentattributeoption:attr_id" VALUE = "{ l.componentattribute:id }">

	<MvIF EXPR = "{ NOT ComponentOption_Insert( l.componentattributeoption ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_LayoutComponent_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		<LayoutComponent_Add layout="My_Layout_Code" component="Component_Code">
			<Name>Name</Name>
			<Code>MyCode</Code>
			<Active>1</Active>
			<Parent>Some Parent</Parent>
			<ParentCode>ParentCode</ParentCode>
			<Date_Start>Valid Date Format</Date_Start>
			<Date_End>Valid Date Format</Date_End>
			<Attributes>
				<Attribute code="MyAttribute">
					<Value>My Value Here</Value>
				</Attribute>
				<Attribute code="MyAttributeLink">
					<LinkType>Product</LinkType>
					<Value>My Value Here</Value>
				</Attribute>
			</Attributes>
		</LayoutComponent_Add>	
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'layout', l.layout_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'component', l.component_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'R', l.provide_xml, 'Name',			l.layout_component:name )			OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 		'R', l.provide_xml,	'Code',			l.layout_component:code )			OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml, 'Active',		l.layout_component:active )			OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Parent',		l.layout_component:parent_name )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code(		'O', l.provide_xml, 'Parent_Code',	l.layout_component:parent_code )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Date_Start',	l.layout_component:dt_start )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Date_End',		l.layout_component:dt_end ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Validate_TimeT( l.layout_component:dt_start ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Date_Start must be a valid date/time in the format MM/DD/YYYY HH:MM:SS' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Validate_TimeT( l.layout_component:dt_end ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Date_End must be a valid date/time in the format MM/DD/YYYY HH:MM:SS' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Load_Code( l.layout_code, l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Layout with the code \'' $ l.layout_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.component_code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.component_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ LayoutComponent_Load_Code( l.layout:id, l.layout_component:code, l.null ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.layout_component:code $ '\' already exists.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.layout_component:parent_code }">
		<MvIF EXPR = "{ NOT LayoutComponentParent_Load_Code( l.layout_component:parent_code, l.layout:id, l.loaded_parent ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Could not load Parent with code \'' $ l.layout_component:parent_code $ '\' in layout \'' $ l.layout:code $ '\'.' ) }">
		</MvIF>
		<MvASSIGN NAME = "l.layout_component:parent" VALUE = "{ l.loaded_parent:id }">
	<MvELSEIF EXPR = "{ NOT ISNULL l.layout_component:parent_name }">
		<MvIF EXPR = "{ NOT LayoutComponentParent_Load_Name( l.layout_component:parent_name, l.layout:id, l.loaded_parent ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Could not load Parent with name \'' $ l.layout_component:parent_name $ '\' in layout \'' $ l.layout:code $ '\'.' ) }">
		</MvIF>
		<MvASSIGN NAME = "l.layout_component:parent" VALUE = "{ l.loaded_parent:id }">
	</MvIF>

	<MvASSIGN NAME = "l.component_attribute_count" VALUE = "{ Components_Attrs_Load_All_ID( l.component:id, l.component:attributes ) }">

	<MvIF EXPR = "{ l.component_attribute_count GT 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Attributes' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Missing required tag Attributes' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.layout_component:layout_id"		VALUE = "{ l.layout:id }">
	<MvASSIGN NAME = "l.layout_component:component_id"	VALUE = "{ l.component:id }">
	<MvASSIGN NAME = "l.layout_component:disp_order"	VALUE = "{ LayoutComponent_DispOrder_Last( l.layout_component:layout_id, l.layout_component:parent ) }">

	<MvIF EXPR = "{ NOT LayoutComponent_Insert( l.layout_component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.component_attribute_count GT 0 }">
		<MvIF EXPR = "{ NOT Module_Provision_LayoutComponent_Attributes( l.provide_xml:tags:Attributes[ 1 ], l.layout_component:id, l.layout_component:component_id ) }">
			<MvASSIGN NAME = "l.null" VALUE = "{ LayoutComponent_Delete( l.layout_component:id ) }">

			<MvIF EXPR = "{ g.TGCOMPONENTS_Error:message }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
			</MvIF>

			<MvFUNCTIONRETURN>
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_LayoutComponent_Attributes" PARAMETERS = "provide_xml var, layout_component_id, component_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.child_pos"		VALUE = 1>
	<MvASSIGN NAME = "l.child_count"	VALUE = "{ miva_array_elements( l.provide_xml:children ) }">

	<MvWHILE EXPR = "{ l.child_pos LE l.child_count }">
		<MvASSIGN NAME = "l.name" VALUE = "{ tolower( l.provide_xml:children[ l.child_pos ]:name ) }">

		<MvIF EXPR = "{ l.name NE 'attribute' }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml:children[ l.child_pos ], 'Unknown tag' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.option" VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml:children[ l.child_pos ], 'code', l.option:code ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ NOT ComponentAttrs_Load_Code( l.component_id, l.option:code, l.option:componentattribute ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml:children[ l.child_pos ], 'Component Attribute with the code \'' $ l.option:code $ '\' does not exist' ) }">
		</MvIF>

		<MvIF EXPR = "{ l.option:componentattribute:type EQ 'link' }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'R', l.provide_xml:children[ l.child_pos ], 'LinkType', l.option:_value:type, 'None,URL,Product,Category,Page', 'N,U,P,C,G' ) }">
				<MvFUNCTIONRETURN>
			</MvIF>

			<MvIF EXPR = "{ l.option:_value:type NE 'N' }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml:children[ l.child_pos ], 'Value', l.option:_value:value ) }">
					<MvFUNCTIONRETURN>
				</MvIF>
			</MvIF>

			<MvASSIGN NAME = "l.option:value" VALUE = "{ miva_array_serialize( l.option:_value ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml:children[ l.child_pos ], 'Value', l.option:value ) }">
				<MvFUNCTIONRETURN>
			</MvIF>

			<MvIF EXPR = "{ l.option:componentattribute:type EQ 'product' }">
				<MvASSIGN NAME = "l.option:_product:id"		VALUE = 0>
				<MvASSIGN NAME = "l.option:_product:code"	VALUE = "{ l.option:value }">

				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.option:_product:code, l.loaded_product ) }">
					<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message" VALUE = "{ 'Product Code \'' $ l.option:_product:code $ '\' was not found.' }">
					<MvFUNCTIONRETURN>
				</MvIF>

				<MvASSIGN NAME = "l.option:_product:id"		VALUE = "{ l.loaded_product:id }">
				<MvASSIGN NAME = "l.option:value"			VALUE = "{ miva_array_serialize( l.option:_product ) }">
			<MvELSEIF EXPR = "{ l.option:componentattribute:type EQ 'category' }">
				<MvASSIGN NAME = "l.option:_category:id"	VALUE = 0>
				<MvASSIGN NAME = "l.option:_category:code"	VALUE = "{ l.option:value }">

				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.option:_category:code, l.loaded_category ) }">
					<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message" VALUE = "{ 'Category Code \'' $ l.option:_category:code $ '\' was not found.' }">
					<MvFUNCTIONRETURN>
				</MvIF>

				<MvASSIGN NAME = "l.option:_category:id"	VALUE = "{ l.loaded_category:id }">
				<MvASSIGN NAME = "l.option:value"			VALUE = "{ miva_array_serialize( l.option:_category ) }">
			<MvELSEIF EXPR = "{ l.option:componentattribute:type EQ 'imagetype' }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ImageType_Load_Code( l.option:value, l.imagetype ) }">
					<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message" VALUE = "{ 'Image Type Code \'' $ l.option:value $ '\' was not found.' }">
					<MvFUNCTIONRETURN>
				</MvIF>

				<MvASSIGN NAME = "l.option:value" VALUE = "{ l.imagetype:id }">
			<MvELSEIF EXPR = "{ l.option:componentattribute:type EQ 'datetime' }">
				<MvASSIGN NAME = "l.option:value" VALUE = "{ int( l.option:value ) }">
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "l.option_count"					VALUE = "{ l.option_count + 1 }">
		<MvASSIGN NAME = "l.option:layouts_components_id"	VALUE = "{ l.layout_component_id }">
		<MvASSIGN NAME = "l.option:attr_id"					VALUE = "{ l.option:componentattribute:id }">

		<MvIF EXPR = "{ NOT LayoutValue_Update( l.option ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvASSIGN NAME = "l.child_pos" VALUE = "{ l.child_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_TimeT" PARAMETERS = "value var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.value }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvCOMMENT>
	|
	| Straight numeric values are considered a raw time_t and passed through as-is
	| Other values are parsed as MM/DD/YYYY HH:MM:SS, with the time being optional
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT isdigit( l.value ) }">
		<MvASSIGN NAME = "l.date"		VALUE = "{ trim( gettoken( l.value, ' ', 1 ) ) }">
		<MvASSIGN NAME = "l.time"		VALUE = "{ trim( gettoken( l.value, ' ', 2 ) ) }">

		<MvASSIGN NAME = "l.year"		VALUE = "{ gettoken( l.date, '/', 3 ) }">
		<MvIF EXPR = "{ l.year LT 100 }">
			<MvASSIGN NAME = "l.year"	VALUE = "{ l.year + 2000 }">
		</MvIF>

		<MvASSIGN NAME = "l.value"		VALUE = "{ mktime_t( l.year, gettoken( l.date, '/', 1 ), gettoken( l.date, '/', 2 ),
															 gettoken( l.time, ':', 1 ), gettoken( l.time, ':', 2 ), gettoken( l.time, ':', 3 ),
															 g.Merchant_Local_Timezone ) }">
		<MvIF EXPR = "{ l.value LT 0 }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION> 

<MvFUNCTION NAME = "Parse_Function_Parameters" PARAMETERS = "string, function_name var, parameters var, parameter_count var" STANDARDOUTPUTLEVEL = "">	
	<MvASSIGN NAME = "l.parameter_count" 	VALUE = 0>
	<MvASSIGN NAME = "l.loop_counter" 		VALUE = 0>
	<MvASSIGN NAME = "l.string" 			VALUE = "{ trim( l.string ) }">
	<MvASSIGN NAME = "l.starting_pos" 		VALUE = "{ indexof( '(', l.string, 1 ) + 1 }">
	<MvASSIGN NAME = "l.function_name" 		VALUE = "{ tolower( substring_var( l.string, 1, l.starting_pos - 2 ) ) }">

	<MvIF EXPR = "{ l.starting_pos EQ 1 }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Expected \'(\' to start the function call' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.function_name }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Missing function name' ) }">
	</MvIF>

	<MvIF EXPR = "{ substring_var( l.string, len_var( l.string ), 1 ) NE ')' }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Expected \')\' to end the function call' ) }">
	</MvIF>

	<MvWHILE EXPR = "{ 1 }">
		<MvASSIGN NAME = "l.quote_pos" 		VALUE = "{ indexof( '\'', l.string, l.starting_pos ) }">
		<MvASSIGN NAME = "l.end_quote_pos" 	VALUE = "{ indexof( '\'', l.string, l.quote_pos + 1 ) }">
		<MvASSIGN NAME = "l.comma_pos" 		VALUE = "{ indexof( ',', l.string, l.starting_pos ) }">

		<MvIF EXPR = "{ l.quote_pos AND NOT l.end_quote_pos }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Missing single quote' ) }">
		</MvIF>

		<MvWHILE EXPR = "{ ( l.comma_pos LT l.end_quote_pos ) AND ( l.comma_pos GT l.quote_pos ) }">
			<MvASSIGN NAME = "l.comma_pos" VALUE = "{ indexof( ',', l.string, l.comma_pos + 1 ) }">
		</MvWHILE>

		<MvIF EXPR = "{ l.comma_pos EQ 0 }">
			<MvASSIGN NAME = "l.start" 			VALUE = "{ l.starting_pos }">
			<MvASSIGN NAME = "l.end" 			VALUE = "{ len_var( l.string ) - l.starting_pos }">
			<MvASSIGN NAME = "l.starting_pos" 	VALUE = "{ len_var( l.string ) }">
			<MvASSIGN NAME = "l.quote_pos" 		VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.start" 			VALUE = "{ l.starting_pos }">
			<MvASSIGN NAME = "l.end" 			VALUE = "{ l.comma_pos - l.starting_pos }">
			<MvASSIGN NAME = "l.starting_pos" 	VALUE = "{ l.comma_pos + 1 }">
		</MvIF>

		<MvASSIGN NAME = "l.param" VALUE = "{ trim( substring_var( l.string, l.start, l.end ) ) }">

		<MvIF EXPR = "{ ISNULL l.param }">
			<MvIF EXPR = "{ l.comma_pos EQ 0 AND l.parameter_count EQ 0 }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Parameter number ' $ ( ++l.parameter_count ) $ ' cannot be empty' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.parameters" INDEX = "{ ++l.parameter_count }" VALUE = "{ l.param }">

		<MvIF EXPR = "{ l.quote_pos EQ 0 AND l.comma_pos EQ 0 }">
			<MvWHILESTOP>
		</MvIF>

		<MvIF EXPR = "{ l.loop_counter GT 1000 }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.string, 'Error parsing parameters' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.loop_counter" VALUE = "{ l.loop_counter + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Parameter_Error" PARAMETERS = "param, message" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.error_count"																VALUE = "{ miva_array_elements( g.Session:tgcomponents ) }">
	<MvASSIGN NAME = "g.Session:tgcomponents" INDEX = "{ l.error_count + 1 }" MEMBER = "param"		VALUE = "{ l.param }">
	<MvASSIGN NAME = "g.Session:tgcomponents" INDEX = "{ l.error_count + 1 }" MEMBER = "message"	VALUE = "{ l.message }">

	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Is_Variable" PARAMETERS = "variable var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.valid_chars" 		VALUE = "_.: ">
	<MvASSIGN NAME = "l.square_bracket_pos" VALUE = 0>
	<MvASSIGN NAME = "l.bracket_count" 		VALUE = 0>

	<MvFOR INDEX = "l.pos" COUNT = "{ len_var( l.variable ) }">
		<MvASSIGN NAME = "l.char" VALUE = "{ substring_var( l.variable, l.pos, 1 ) }">

		<MvIF EXPR = "{ l.pos EQ 1 }">
			<MvIF EXPR = "{ ( NOT isalpha( l.char ) ) AND
							( l.char NE '_' ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvFORCONTINUE>
		</MvIF>

		<MvIF EXPR = "{ l.char EQ '[' }">
			<MvASSIGN NAME = "l.bracket_count" 				VALUE = "{ l.bracket_count + 1 }">
			<MvASSIGN NAME = "l.opening_square_bracket_pos" VALUE = "{ indexof( '[', l.variable, l.pos + 1 ) }">
			<MvASSIGN NAME = "l.closing_square_bracket_pos" VALUE = "{ indexof( ']', l.variable, l.pos ) }">

			<MvIF EXPR = "{ ( l.opening_square_bracket_pos GT 0 ) AND
							( l.opening_square_bracket_pos LT l.closing_square_bracket_pos ) }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.opening_square_bracket_pos - 1 }">
			<MvELSEIF EXPR = "{ l.closing_square_bracket_pos GT 0 }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.closing_square_bracket_pos - 1 }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ ']' }">
			<MvASSIGN NAME = "l.bracket_count" 				VALUE = "{ l.bracket_count - 1 }">
			<MvASSIGN NAME = "l.opening_square_bracket_pos" VALUE = "{ indexof( '[', l.variable, l.pos ) }">
			<MvASSIGN NAME = "l.closing_square_bracket_pos" VALUE = "{ indexof( ']', l.variable, l.pos + 1 ) }">

			<MvIF EXPR = "{ ( l.opening_square_bracket_pos GT 0 ) AND
							( l.opening_square_bracket_pos LT l.closing_square_bracket_pos ) }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.opening_square_bracket_pos - 1 }">
			<MvELSEIF EXPR = "{ l.closing_square_bracket_pos GT 0 }">
				<MvASSIGN NAME = "l.pos" VALUE = "{ l.closing_square_bracket_pos - 1 }">
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ ( NOT isdigit( l.char ) ) AND
							( NOT isalpha( l.char ) ) AND
							( NOT ( l.char IN l.valid_chars ) ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>
	</MvFOR>

	<MvIF EXPR = "{ l.bracket_count NE 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>
